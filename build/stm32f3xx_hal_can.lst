ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_CAN_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_CAN_MspInit:
  26              	.LFB128:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @file    stm32f3xx_hal_can.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @verbatim
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_MspInit():
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) Configure CAN pins
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           functions:
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           messages.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           can be used:
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  message.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  message.
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  mailboxes.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  in a Tx mailbox.
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           stored in the Rx Fifo.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Polling mode operation ***
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ==============================
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Reception:
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  until at least one message is received.
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Transmission:
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Then request transmission of a message using
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Interrupt mode operation ***
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ================================
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           function. Then, the process can be controlled through the
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Notifications can be deactivated using
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           here.
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  read, the notification can be activated again.
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Sleep mode ***
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ==================
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           be completed.
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           will be entered.
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The wake-up from sleep mode can be trigged by two ways:
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  if automatic wake up mode is enabled.
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @endverbatim
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @attention
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * are permitted provided that the following conditions are met:
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      and/or other materials provided with the distribution.
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      without specific prior written permission.
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #include "stm32f3xx_hal.h"
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @addtogroup STM32F3xx_HAL_Driver
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if defined(CAN)
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN CAN
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief CAN driver modules
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan == NULL)
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Exit from sleep mode */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Change CAN state */
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Request initialisation */
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Wait initialisation acknowledge */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Change CAN state */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the time triggered communication mode */
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic bus-off management */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic wake-up mode */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic retransmission */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the transmit FIFO priority */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the bit timing register */
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialize the error code */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialize the CAN state */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         reset values.
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan == NULL)
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Stop the CAN module */
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Reset the CAN peripheral */
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
  28              		.loc 1 415 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
  34              		.loc 1 422 0
  35 0000 7047     		bx	lr
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 9


  36              		.cfi_endproc
  37              	.LFE128:
  39              		.section	.text.HAL_CAN_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_CAN_Init
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HAL_CAN_Init:
  48              	.LFB126:
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
  49              		.loc 1 223 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              	.LVL1:
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  54              		.loc 1 227 0
  55 0000 0028     		cmp	r0, #0
  56 0002 00F0A180 		beq	.L21
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
  57              		.loc 1 223 0
  58 0006 38B5     		push	{r3, r4, r5, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 16
  61              		.cfi_offset 3, -16
  62              		.cfi_offset 4, -12
  63              		.cfi_offset 5, -8
  64              		.cfi_offset 14, -4
  65 0008 0446     		mov	r4, r0
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  66              		.loc 1 246 0
  67 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
  68 000e D3B1     		cbz	r3, .L26
  69              	.LVL2:
  70              	.L4:
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  71              		.loc 1 253 0
  72 0010 2268     		ldr	r2, [r4]
  73 0012 1368     		ldr	r3, [r2]
  74 0014 23F00203 		bic	r3, r3, #2
  75 0018 1360     		str	r3, [r2]
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  76              		.loc 1 256 0
  77 001a FFF7FEFF 		bl	HAL_GetTick
  78              	.LVL3:
  79 001e 0546     		mov	r5, r0
  80              	.LVL4:
  81              	.L5:
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  82              		.loc 1 259 0
  83 0020 2368     		ldr	r3, [r4]
  84 0022 5A68     		ldr	r2, [r3, #4]
  85 0024 12F0020F 		tst	r2, #2
  86 0028 10D0     		beq	.L27
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 10


  87              		.loc 1 261 0
  88 002a FFF7FEFF 		bl	HAL_GetTick
  89              	.LVL5:
  90 002e 401B     		subs	r0, r0, r5
  91 0030 0A28     		cmp	r0, #10
  92 0032 F5D9     		bls	.L5
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  93              		.loc 1 264 0
  94 0034 636A     		ldr	r3, [r4, #36]
  95 0036 43F40033 		orr	r3, r3, #131072
  96 003a 6362     		str	r3, [r4, #36]
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  97              		.loc 1 267 0
  98 003c 0523     		movs	r3, #5
  99 003e 84F82030 		strb	r3, [r4, #32]
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 100              		.loc 1 269 0
 101 0042 0120     		movs	r0, #1
 102              	.L3:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 103              		.loc 1 369 0
 104 0044 38BD     		pop	{r3, r4, r5, pc}
 105              	.LVL6:
 106              	.L26:
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 107              		.loc 1 249 0
 108 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 109              	.LVL7:
 110 004a E1E7     		b	.L4
 111              	.LVL8:
 112              	.L27:
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 113              		.loc 1 274 0
 114 004c 1A68     		ldr	r2, [r3]
 115 004e 42F00102 		orr	r2, r2, #1
 116 0052 1A60     		str	r2, [r3]
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 117              		.loc 1 277 0
 118 0054 FFF7FEFF 		bl	HAL_GetTick
 119              	.LVL9:
 120 0058 0546     		mov	r5, r0
 121              	.LVL10:
 122              	.L7:
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 123              		.loc 1 280 0
 124 005a 2368     		ldr	r3, [r4]
 125 005c 5A68     		ldr	r2, [r3, #4]
 126 005e 12F0010F 		tst	r2, #1
 127 0062 0DD1     		bne	.L28
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 128              		.loc 1 282 0
 129 0064 FFF7FEFF 		bl	HAL_GetTick
 130              	.LVL11:
 131 0068 401B     		subs	r0, r0, r5
 132 006a 0A28     		cmp	r0, #10
 133 006c F5D9     		bls	.L7
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 11


 134              		.loc 1 285 0
 135 006e 636A     		ldr	r3, [r4, #36]
 136 0070 43F40033 		orr	r3, r3, #131072
 137 0074 6362     		str	r3, [r4, #36]
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 138              		.loc 1 288 0
 139 0076 0523     		movs	r3, #5
 140 0078 84F82030 		strb	r3, [r4, #32]
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 141              		.loc 1 290 0
 142 007c 0120     		movs	r0, #1
 143 007e E1E7     		b	.L3
 144              	.L28:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 145              		.loc 1 295 0
 146 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 147 0082 012A     		cmp	r2, #1
 148 0084 3DD0     		beq	.L29
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 149              		.loc 1 301 0
 150 0086 1A68     		ldr	r2, [r3]
 151 0088 22F08002 		bic	r2, r2, #128
 152 008c 1A60     		str	r2, [r3]
 153              	.L10:
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 154              		.loc 1 305 0
 155 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 156 0090 012B     		cmp	r3, #1
 157 0092 3BD0     		beq	.L30
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 158              		.loc 1 311 0
 159 0094 2268     		ldr	r2, [r4]
 160 0096 1368     		ldr	r3, [r2]
 161 0098 23F04003 		bic	r3, r3, #64
 162 009c 1360     		str	r3, [r2]
 163              	.L12:
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 164              		.loc 1 315 0
 165 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 166 00a0 012B     		cmp	r3, #1
 167 00a2 39D0     		beq	.L31
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 168              		.loc 1 321 0
 169 00a4 2268     		ldr	r2, [r4]
 170 00a6 1368     		ldr	r3, [r2]
 171 00a8 23F02003 		bic	r3, r3, #32
 172 00ac 1360     		str	r3, [r2]
 173              	.L14:
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 174              		.loc 1 325 0
 175 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 176 00b0 012B     		cmp	r3, #1
 177 00b2 37D0     		beq	.L32
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 178              		.loc 1 331 0
 179 00b4 2268     		ldr	r2, [r4]
 180 00b6 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 12


 181 00b8 43F01003 		orr	r3, r3, #16
 182 00bc 1360     		str	r3, [r2]
 183              	.L16:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 184              		.loc 1 335 0
 185 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 186 00c0 012B     		cmp	r3, #1
 187 00c2 35D0     		beq	.L33
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 188              		.loc 1 341 0
 189 00c4 2268     		ldr	r2, [r4]
 190 00c6 1368     		ldr	r3, [r2]
 191 00c8 23F00803 		bic	r3, r3, #8
 192 00cc 1360     		str	r3, [r2]
 193              	.L18:
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 194              		.loc 1 345 0
 195 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 196 00d0 012B     		cmp	r3, #1
 197 00d2 33D0     		beq	.L34
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 198              		.loc 1 351 0
 199 00d4 2268     		ldr	r2, [r4]
 200 00d6 1368     		ldr	r3, [r2]
 201 00d8 23F00403 		bic	r3, r3, #4
 202 00dc 1360     		str	r3, [r2]
 203              	.L20:
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 204              		.loc 1 355 0
 205 00de A368     		ldr	r3, [r4, #8]
 206 00e0 E268     		ldr	r2, [r4, #12]
 207 00e2 1343     		orrs	r3, r3, r2
 208 00e4 2269     		ldr	r2, [r4, #16]
 209 00e6 1343     		orrs	r3, r3, r2
 210 00e8 6269     		ldr	r2, [r4, #20]
 211 00ea 1343     		orrs	r3, r3, r2
 212 00ec 6268     		ldr	r2, [r4, #4]
 213 00ee 013A     		subs	r2, r2, #1
 214 00f0 2168     		ldr	r1, [r4]
 215 00f2 1343     		orrs	r3, r3, r2
 216 00f4 CB61     		str	r3, [r1, #28]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 217              		.loc 1 362 0
 218 00f6 0020     		movs	r0, #0
 219 00f8 6062     		str	r0, [r4, #36]
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 220              		.loc 1 365 0
 221 00fa 0123     		movs	r3, #1
 222 00fc 84F82030 		strb	r3, [r4, #32]
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 223              		.loc 1 368 0
 224 0100 A0E7     		b	.L3
 225              	.L29:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 226              		.loc 1 297 0
 227 0102 1A68     		ldr	r2, [r3]
 228 0104 42F08002 		orr	r2, r2, #128
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 13


 229 0108 1A60     		str	r2, [r3]
 230 010a C0E7     		b	.L10
 231              	.L30:
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 232              		.loc 1 307 0
 233 010c 2268     		ldr	r2, [r4]
 234 010e 1368     		ldr	r3, [r2]
 235 0110 43F04003 		orr	r3, r3, #64
 236 0114 1360     		str	r3, [r2]
 237 0116 C2E7     		b	.L12
 238              	.L31:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 239              		.loc 1 317 0
 240 0118 2268     		ldr	r2, [r4]
 241 011a 1368     		ldr	r3, [r2]
 242 011c 43F02003 		orr	r3, r3, #32
 243 0120 1360     		str	r3, [r2]
 244 0122 C4E7     		b	.L14
 245              	.L32:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 246              		.loc 1 327 0
 247 0124 2268     		ldr	r2, [r4]
 248 0126 1368     		ldr	r3, [r2]
 249 0128 23F01003 		bic	r3, r3, #16
 250 012c 1360     		str	r3, [r2]
 251 012e C6E7     		b	.L16
 252              	.L33:
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 253              		.loc 1 337 0
 254 0130 2268     		ldr	r2, [r4]
 255 0132 1368     		ldr	r3, [r2]
 256 0134 43F00803 		orr	r3, r3, #8
 257 0138 1360     		str	r3, [r2]
 258 013a C8E7     		b	.L18
 259              	.L34:
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 260              		.loc 1 347 0
 261 013c 2268     		ldr	r2, [r4]
 262 013e 1368     		ldr	r3, [r2]
 263 0140 43F00403 		orr	r3, r3, #4
 264 0144 1360     		str	r3, [r2]
 265 0146 CAE7     		b	.L20
 266              	.LVL12:
 267              	.L21:
 268              	.LCFI1:
 269              		.cfi_def_cfa_offset 0
 270              		.cfi_restore 3
 271              		.cfi_restore 4
 272              		.cfi_restore 5
 273              		.cfi_restore 14
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 274              		.loc 1 229 0
 275 0148 0120     		movs	r0, #1
 276              	.LVL13:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 277              		.loc 1 369 0
 278 014a 7047     		bx	lr
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 14


 279              		.cfi_endproc
 280              	.LFE126:
 282              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 283              		.align	1
 284              		.weak	HAL_CAN_MspDeInit
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	HAL_CAN_MspDeInit:
 291              	.LFB129:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 292              		.loc 1 431 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297              	.LVL14:
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 298              		.loc 1 438 0
 299 0000 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE129:
 303              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 304              		.align	1
 305              		.global	HAL_CAN_ConfigFilter
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
 311              	HAL_CAN_ConfigFilter:
 312              	.LFB130:
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    Configuration functions.
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 15


 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               ##### Configuration functions #####
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         contains the filter configuration information.
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, CAN_FilterTypeDef *sFilterConfig)
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 313              		.loc 1 469 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL15:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filternbrbitpos;
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 319              		.loc 1 471 0
 320 0000 0368     		ldr	r3, [r0]
 321              	.LVL16:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 322              		.loc 1 472 0
 323 0002 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 324              	.LVL17:
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 325              		.loc 1 474 0
 326 0006 013A     		subs	r2, r2, #1
 327              	.LVL18:
 328 0008 D2B2     		uxtb	r2, r2
 329 000a 012A     		cmp	r2, #1
 330 000c 05D9     		bls	.L50
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the parameters */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* CAN is single instance with 14 dedicated filters banks */
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 16


 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the parameters */
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Initialisation mode for the filter */
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Convert filter number into bit position */
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Deactivation */
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Scale */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 16-bit scale for the filter */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit scale for the filter */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Mode */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Identifier list mode for the filter*/
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 17


 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter FIFO assignment */
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter activation */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 331              		.loc 1 575 0
 332 000e 436A     		ldr	r3, [r0, #36]
 333              	.LVL19:
 334 0010 43F48023 		orr	r3, r3, #262144
 335 0014 4362     		str	r3, [r0, #36]
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 336              		.loc 1 577 0
 337 0016 0120     		movs	r0, #1
 338              	.LVL20:
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 339              		.loc 1 579 0
 340 0018 7047     		bx	lr
 341              	.LVL21:
 342              	.L50:
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filternbrbitpos;
 343              		.loc 1 469 0
 344 001a 70B4     		push	{r4, r5, r6}
 345              	.LCFI2:
 346              		.cfi_def_cfa_offset 12
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 5, -8
 349              		.cfi_offset 6, -4
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 350              		.loc 1 493 0
 351 001c D3F80022 		ldr	r2, [r3, #512]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 18


 352 0020 42F00102 		orr	r2, r2, #1
 353 0024 C3F80022 		str	r2, [r3, #512]
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 354              		.loc 1 496 0
 355 0028 4A69     		ldr	r2, [r1, #20]
 356 002a 02F01F02 		and	r2, r2, #31
 357 002e 0120     		movs	r0, #1
 358              	.LVL22:
 359 0030 00FA02F2 		lsl	r2, r0, r2
 360              	.LVL23:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 361              		.loc 1 499 0
 362 0034 D3F81C42 		ldr	r4, [r3, #540]
 363 0038 D043     		mvns	r0, r2
 364 003a 0440     		ands	r4, r4, r0
 365 003c C3F81C42 		str	r4, [r3, #540]
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 366              		.loc 1 502 0
 367 0040 CC69     		ldr	r4, [r1, #28]
 368 0042 ACB9     		cbnz	r4, .L38
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 369              		.loc 1 505 0
 370 0044 D3F80C42 		ldr	r4, [r3, #524]
 371 0048 0440     		ands	r4, r4, r0
 372 004a C3F80C42 		str	r4, [r3, #524]
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 373              		.loc 1 510 0
 374 004e CE68     		ldr	r6, [r1, #12]
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 375              		.loc 1 511 0
 376 0050 8D88     		ldrh	r5, [r1, #4]
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 377              		.loc 1 509 0
 378 0052 4C69     		ldr	r4, [r1, #20]
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 379              		.loc 1 510 0
 380 0054 45EA0645 		orr	r5, r5, r6, lsl #16
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 381              		.loc 1 509 0
 382 0058 4834     		adds	r4, r4, #72
 383 005a 43F83450 		str	r5, [r3, r4, lsl #3]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 384              		.loc 1 516 0
 385 005e 8E68     		ldr	r6, [r1, #8]
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 386              		.loc 1 517 0
 387 0060 0D88     		ldrh	r5, [r1]
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 388              		.loc 1 515 0
 389 0062 4C69     		ldr	r4, [r1, #20]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 390              		.loc 1 516 0
 391 0064 45EA0645 		orr	r5, r5, r6, lsl #16
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 392              		.loc 1 515 0
 393 0068 4834     		adds	r4, r4, #72
 394 006a 03EBC404 		add	r4, r3, r4, lsl #3
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 19


 395 006e 6560     		str	r5, [r4, #4]
 396              	.L38:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 397              		.loc 1 520 0
 398 0070 CC69     		ldr	r4, [r1, #28]
 399 0072 012C     		cmp	r4, #1
 400 0074 19D0     		beq	.L51
 401              	.L39:
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 402              		.loc 1 537 0
 403 0076 8C69     		ldr	r4, [r1, #24]
 404 0078 74BB     		cbnz	r4, .L40
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 405              		.loc 1 540 0
 406 007a D3F80442 		ldr	r4, [r3, #516]
 407 007e 0440     		ands	r4, r4, r0
 408 0080 C3F80442 		str	r4, [r3, #516]
 409              	.L41:
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 410              		.loc 1 549 0
 411 0084 0C69     		ldr	r4, [r1, #16]
 412 0086 6CBB     		cbnz	r4, .L42
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 413              		.loc 1 552 0
 414 0088 D3F81442 		ldr	r4, [r3, #532]
 415 008c 2040     		ands	r0, r0, r4
 416 008e C3F81402 		str	r0, [r3, #532]
 417              	.L43:
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 418              		.loc 1 561 0
 419 0092 096A     		ldr	r1, [r1, #32]
 420              	.LVL24:
 421 0094 0129     		cmp	r1, #1
 422 0096 2BD0     		beq	.L52
 423              	.LVL25:
 424              	.L44:
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 425              		.loc 1 567 0
 426 0098 D3F80022 		ldr	r2, [r3, #512]
 427 009c 22F00102 		bic	r2, r2, #1
 428 00a0 C3F80022 		str	r2, [r3, #512]
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 429              		.loc 1 570 0
 430 00a4 0020     		movs	r0, #0
 431              		.loc 1 579 0
 432 00a6 70BC     		pop	{r4, r5, r6}
 433              	.LCFI3:
 434              		.cfi_remember_state
 435              		.cfi_restore 6
 436              		.cfi_restore 5
 437              		.cfi_restore 4
 438              		.cfi_def_cfa_offset 0
 439 00a8 7047     		bx	lr
 440              	.LVL26:
 441              	.L51:
 442              	.LCFI4:
 443              		.cfi_restore_state
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 20


 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 444              		.loc 1 523 0
 445 00aa D3F80C42 		ldr	r4, [r3, #524]
 446 00ae 1443     		orrs	r4, r4, r2
 447 00b0 C3F80C42 		str	r4, [r3, #524]
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 448              		.loc 1 527 0
 449 00b4 0E68     		ldr	r6, [r1]
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 450              		.loc 1 528 0
 451 00b6 8D88     		ldrh	r5, [r1, #4]
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 452              		.loc 1 526 0
 453 00b8 4C69     		ldr	r4, [r1, #20]
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 454              		.loc 1 527 0
 455 00ba 45EA0645 		orr	r5, r5, r6, lsl #16
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 456              		.loc 1 526 0
 457 00be 4834     		adds	r4, r4, #72
 458 00c0 43F83450 		str	r5, [r3, r4, lsl #3]
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 459              		.loc 1 532 0
 460 00c4 8E68     		ldr	r6, [r1, #8]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 461              		.loc 1 533 0
 462 00c6 8D89     		ldrh	r5, [r1, #12]
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 463              		.loc 1 531 0
 464 00c8 4C69     		ldr	r4, [r1, #20]
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 465              		.loc 1 532 0
 466 00ca 45EA0645 		orr	r5, r5, r6, lsl #16
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 467              		.loc 1 531 0
 468 00ce 4834     		adds	r4, r4, #72
 469 00d0 03EBC404 		add	r4, r3, r4, lsl #3
 470 00d4 6560     		str	r5, [r4, #4]
 471 00d6 CEE7     		b	.L39
 472              	.L40:
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 473              		.loc 1 545 0
 474 00d8 D3F80442 		ldr	r4, [r3, #516]
 475 00dc 1443     		orrs	r4, r4, r2
 476 00de C3F80442 		str	r4, [r3, #516]
 477 00e2 CFE7     		b	.L41
 478              	.L42:
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 479              		.loc 1 557 0
 480 00e4 D3F81402 		ldr	r0, [r3, #532]
 481 00e8 1043     		orrs	r0, r0, r2
 482 00ea C3F81402 		str	r0, [r3, #532]
 483 00ee D0E7     		b	.L43
 484              	.LVL27:
 485              	.L52:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 486              		.loc 1 563 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 21


 487 00f0 D3F81C12 		ldr	r1, [r3, #540]
 488 00f4 0A43     		orrs	r2, r2, r1
 489              	.LVL28:
 490 00f6 C3F81C22 		str	r2, [r3, #540]
 491 00fa CDE7     		b	.L44
 492              		.cfi_endproc
 493              	.LFE130:
 495              		.section	.text.HAL_CAN_Start,"ax",%progbits
 496              		.align	1
 497              		.global	HAL_CAN_Start
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	HAL_CAN_Start:
 504              	.LFB131:
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    Control functions
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                       ##### Control functions #####
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              and activate the corresponding
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              transmission request
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              pending on the selected Tx mailbox
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Start the CAN module.
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 505              		.loc 1 619 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 22


 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL29:
 510 0000 38B5     		push	{r3, r4, r5, lr}
 511              	.LCFI5:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 3, -16
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 5, -8
 516              		.cfi_offset 14, -4
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 517              		.loc 1 622 0
 518 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 519 0006 DBB2     		uxtb	r3, r3
 520 0008 012B     		cmp	r3, #1
 521 000a 05D0     		beq	.L59
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN peripheral state */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request leave initialisation */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait the acknowledge */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check for the Timeout */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Change CAN state */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Reset the CAN ErrorCode */
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 522              		.loc 1 658 0
 523 000c 436A     		ldr	r3, [r0, #36]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 23


 524 000e 43F40023 		orr	r3, r3, #524288
 525 0012 4362     		str	r3, [r0, #36]
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 526              		.loc 1 660 0
 527 0014 0120     		movs	r0, #1
 528              	.LVL30:
 529              	.L56:
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 530              		.loc 1 662 0
 531 0016 38BD     		pop	{r3, r4, r5, pc}
 532              	.LVL31:
 533              	.L59:
 534 0018 0446     		mov	r4, r0
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 535              		.loc 1 625 0
 536 001a 0223     		movs	r3, #2
 537 001c 80F82030 		strb	r3, [r0, #32]
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 538              		.loc 1 628 0
 539 0020 0268     		ldr	r2, [r0]
 540 0022 1368     		ldr	r3, [r2]
 541 0024 23F00103 		bic	r3, r3, #1
 542 0028 1360     		str	r3, [r2]
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 543              		.loc 1 631 0
 544 002a FFF7FEFF 		bl	HAL_GetTick
 545              	.LVL32:
 546 002e 0546     		mov	r5, r0
 547              	.LVL33:
 548              	.L55:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 549              		.loc 1 634 0
 550 0030 2368     		ldr	r3, [r4]
 551 0032 5B68     		ldr	r3, [r3, #4]
 552 0034 13F0010F 		tst	r3, #1
 553 0038 0DD0     		beq	.L60
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 554              		.loc 1 637 0
 555 003a FFF7FEFF 		bl	HAL_GetTick
 556              	.LVL34:
 557 003e 401B     		subs	r0, r0, r5
 558 0040 0A28     		cmp	r0, #10
 559 0042 F5D9     		bls	.L55
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 560              		.loc 1 640 0
 561 0044 636A     		ldr	r3, [r4, #36]
 562 0046 43F40033 		orr	r3, r3, #131072
 563 004a 6362     		str	r3, [r4, #36]
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 564              		.loc 1 643 0
 565 004c 0523     		movs	r3, #5
 566 004e 84F82030 		strb	r3, [r4, #32]
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 567              		.loc 1 645 0
 568 0052 0120     		movs	r0, #1
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 24


 569 0054 DFE7     		b	.L56
 570              	.L60:
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 571              		.loc 1 650 0
 572 0056 0020     		movs	r0, #0
 573 0058 6062     		str	r0, [r4, #36]
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 574              		.loc 1 653 0
 575 005a DCE7     		b	.L56
 576              		.cfi_endproc
 577              	.LFE131:
 579              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_CAN_Stop
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	HAL_CAN_Stop:
 588              	.LFB132:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 589              		.loc 1 671 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LVL35:
 594 0000 38B5     		push	{r3, r4, r5, lr}
 595              	.LCFI6:
 596              		.cfi_def_cfa_offset 16
 597              		.cfi_offset 3, -16
 598              		.cfi_offset 4, -12
 599              		.cfi_offset 5, -8
 600              		.cfi_offset 14, -4
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 601              		.loc 1 674 0
 602 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 603 0006 DBB2     		uxtb	r3, r3
 604 0008 022B     		cmp	r3, #2
 605 000a 05D0     		beq	.L67
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request initialisation */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait the acknowledge */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 25


 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check for the Timeout */
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Change CAN state */
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Exit from sleep mode */
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN peripheral state */
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 606              		.loc 1 710 0
 607 000c 436A     		ldr	r3, [r0, #36]
 608 000e 43F48013 		orr	r3, r3, #1048576
 609 0012 4362     		str	r3, [r0, #36]
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 610              		.loc 1 712 0
 611 0014 0120     		movs	r0, #1
 612              	.LVL36:
 613              	.L64:
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 614              		.loc 1 714 0
 615 0016 38BD     		pop	{r3, r4, r5, pc}
 616              	.LVL37:
 617              	.L67:
 618 0018 0446     		mov	r4, r0
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 619              		.loc 1 677 0
 620 001a 0268     		ldr	r2, [r0]
 621 001c 1368     		ldr	r3, [r2]
 622 001e 43F00103 		orr	r3, r3, #1
 623 0022 1360     		str	r3, [r2]
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 624              		.loc 1 680 0
 625 0024 FFF7FEFF 		bl	HAL_GetTick
 626              	.LVL38:
 627 0028 0546     		mov	r5, r0
 628              	.LVL39:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 26


 629              	.L63:
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 630              		.loc 1 683 0
 631 002a 2368     		ldr	r3, [r4]
 632 002c 5A68     		ldr	r2, [r3, #4]
 633 002e 12F0010F 		tst	r2, #1
 634 0032 0DD1     		bne	.L68
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 635              		.loc 1 686 0
 636 0034 FFF7FEFF 		bl	HAL_GetTick
 637              	.LVL40:
 638 0038 401B     		subs	r0, r0, r5
 639 003a 0A28     		cmp	r0, #10
 640 003c F5D9     		bls	.L63
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 641              		.loc 1 689 0
 642 003e 636A     		ldr	r3, [r4, #36]
 643 0040 43F40033 		orr	r3, r3, #131072
 644 0044 6362     		str	r3, [r4, #36]
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 645              		.loc 1 692 0
 646 0046 0523     		movs	r3, #5
 647 0048 84F82030 		strb	r3, [r4, #32]
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 648              		.loc 1 694 0
 649 004c 0120     		movs	r0, #1
 650 004e E2E7     		b	.L64
 651              	.L68:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 652              		.loc 1 699 0
 653 0050 1A68     		ldr	r2, [r3]
 654 0052 22F00202 		bic	r2, r2, #2
 655 0056 1A60     		str	r2, [r3]
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 656              		.loc 1 702 0
 657 0058 0123     		movs	r3, #1
 658 005a 84F82030 		strb	r3, [r4, #32]
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 659              		.loc 1 705 0
 660 005e 0020     		movs	r0, #0
 661 0060 D9E7     		b	.L64
 662              		.cfi_endproc
 663              	.LFE132:
 665              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 666              		.align	1
 667              		.global	HAL_CAN_DeInit
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv4-sp-d16
 673              	HAL_CAN_DeInit:
 674              	.LFB127:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 675              		.loc 1 379 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 27


 679              	.LVL41:
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 680              		.loc 1 381 0
 681 0000 80B1     		cbz	r0, .L71
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 682              		.loc 1 379 0
 683 0002 10B5     		push	{r4, lr}
 684              	.LCFI7:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 4, -8
 687              		.cfi_offset 14, -4
 688 0004 0446     		mov	r4, r0
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 689              		.loc 1 390 0
 690 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 691              	.LVL42:
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 692              		.loc 1 393 0
 693 000a 2046     		mov	r0, r4
 694 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 695              	.LVL43:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 696              		.loc 1 396 0
 697 0010 2268     		ldr	r2, [r4]
 698 0012 1368     		ldr	r3, [r2]
 699 0014 43F40043 		orr	r3, r3, #32768
 700 0018 1360     		str	r3, [r2]
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 701              		.loc 1 399 0
 702 001a 0020     		movs	r0, #0
 703 001c 6062     		str	r0, [r4, #36]
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 704              		.loc 1 402 0
 705 001e 84F82000 		strb	r0, [r4, #32]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 706              		.loc 1 406 0
 707 0022 10BD     		pop	{r4, pc}
 708              	.LVL44:
 709              	.L71:
 710              	.LCFI8:
 711              		.cfi_def_cfa_offset 0
 712              		.cfi_restore 4
 713              		.cfi_restore 14
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 714              		.loc 1 383 0
 715 0024 0120     		movs	r0, #1
 716              	.LVL45:
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 717              		.loc 1 406 0
 718 0026 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE127:
 722              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_CAN_RequestSleep
 725              		.syntax unified
 726              		.thumb
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 28


 727              		.thumb_func
 728              		.fpu fpv4-sp-d16
 730              	HAL_CAN_RequestSleep:
 731              	.LFB133:
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         of a CAN frame) has been completed.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 732              		.loc 1 726 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737              	.LVL46:
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 738              		.loc 1 727 0
 739 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 740              	.LVL47:
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 741              		.loc 1 729 0
 742 0004 013B     		subs	r3, r3, #1
 743              	.LVL48:
 744 0006 DBB2     		uxtb	r3, r3
 745 0008 012B     		cmp	r3, #1
 746 000a 05D9     		bls	.L79
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request Sleep mode */
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 747              		.loc 1 741 0
 748 000c 436A     		ldr	r3, [r0, #36]
 749 000e 43F48023 		orr	r3, r3, #262144
 750 0012 4362     		str	r3, [r0, #36]
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 751              		.loc 1 744 0
 752 0014 0120     		movs	r0, #1
 753              	.LVL49:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 29


 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 754              		.loc 1 746 0
 755 0016 7047     		bx	lr
 756              	.LVL50:
 757              	.L79:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 758              		.loc 1 733 0
 759 0018 0268     		ldr	r2, [r0]
 760 001a 1368     		ldr	r3, [r2]
 761 001c 43F00203 		orr	r3, r3, #2
 762 0020 1360     		str	r3, [r2]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 763              		.loc 1 736 0
 764 0022 0020     		movs	r0, #0
 765              	.LVL51:
 766 0024 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE133:
 770              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 771              		.align	1
 772              		.global	HAL_CAN_WakeUp
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv4-sp-d16
 778              	HAL_CAN_WakeUp:
 779              	.LFB134:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Wake up from sleep mode.
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         is exited.
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 780              		.loc 1 757 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785              	.LVL52:
 786 0000 82B0     		sub	sp, sp, #8
 787              	.LCFI9:
 788              		.cfi_def_cfa_offset 8
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __IO uint32_t count = 0;
 789              		.loc 1 758 0
 790 0002 0023     		movs	r3, #0
 791 0004 0193     		str	r3, [sp, #4]
 792              	.LVL53:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t timeout = 1000000U;
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 793              		.loc 1 760 0
 794 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 795              	.LVL54:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 30


 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 796              		.loc 1 762 0
 797 000a 013B     		subs	r3, r3, #1
 798              	.LVL55:
 799 000c DBB2     		uxtb	r3, r3
 800 000e 012B     		cmp	r3, #1
 801 0010 06D9     		bls	.L86
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wake up request */
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait sleep mode is exited */
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     do
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Increment counter */
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       count++;
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check if timeout is reached */
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (count > timeout)
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 802              		.loc 1 791 0
 803 0012 436A     		ldr	r3, [r0, #36]
 804 0014 43F48023 		orr	r3, r3, #262144
 805 0018 4362     		str	r3, [r0, #36]
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 806              		.loc 1 793 0
 807 001a 0120     		movs	r0, #1
 808              	.LVL56:
 809              	.L83:
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 810              		.loc 1 795 0
 811 001c 02B0     		add	sp, sp, #8
 812              	.LCFI10:
 813              		.cfi_remember_state
 814              		.cfi_def_cfa_offset 0
 815              		@ sp needed
 816 001e 7047     		bx	lr
 817              	.LVL57:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 31


 818              	.L86:
 819              	.LCFI11:
 820              		.cfi_restore_state
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 821              		.loc 1 766 0
 822 0020 0268     		ldr	r2, [r0]
 823 0022 1368     		ldr	r3, [r2]
 824 0024 23F00203 		bic	r3, r3, #2
 825 0028 1360     		str	r3, [r2]
 826              	.L84:
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 827              		.loc 1 772 0
 828 002a 019B     		ldr	r3, [sp, #4]
 829 002c 0133     		adds	r3, r3, #1
 830 002e 0193     		str	r3, [sp, #4]
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 831              		.loc 1 775 0
 832 0030 019A     		ldr	r2, [sp, #4]
 833 0032 084B     		ldr	r3, .L88
 834 0034 9A42     		cmp	r2, r3
 835 0036 06D8     		bhi	.L87
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 836              		.loc 1 783 0
 837 0038 0368     		ldr	r3, [r0]
 838 003a 5B68     		ldr	r3, [r3, #4]
 839 003c 13F0020F 		tst	r3, #2
 840 0040 F3D1     		bne	.L84
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 841              		.loc 1 786 0
 842 0042 0020     		movs	r0, #0
 843              	.LVL58:
 844 0044 EAE7     		b	.L83
 845              	.LVL59:
 846              	.L87:
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 847              		.loc 1 778 0
 848 0046 436A     		ldr	r3, [r0, #36]
 849 0048 43F40033 		orr	r3, r3, #131072
 850 004c 4362     		str	r3, [r0, #36]
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 851              		.loc 1 780 0
 852 004e 0120     		movs	r0, #1
 853              	.LVL60:
 854 0050 E4E7     		b	.L83
 855              	.L89:
 856 0052 00BF     		.align	2
 857              	.L88:
 858 0054 40420F00 		.word	1000000
 859              		.cfi_endproc
 860              	.LFE134:
 862              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 863              		.align	1
 864              		.global	HAL_CAN_IsSleepActive
 865              		.syntax unified
 866              		.thumb
 867              		.thumb_func
 868              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 32


 870              	HAL_CAN_IsSleepActive:
 871              	.LFB135:
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Check is sleep mode is active.
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Status
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 1 : Sleep mode is active.
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(CAN_HandleTypeDef *hcan)
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 872              		.loc 1 806 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 877              	.LVL61:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 878              		.loc 1 808 0
 879 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 880              	.LVL62:
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 881              		.loc 1 810 0
 882 0004 013B     		subs	r3, r3, #1
 883              	.LVL63:
 884 0006 DBB2     		uxtb	r3, r3
 885 0008 012B     		cmp	r3, #1
 886 000a 01D9     		bls	.L94
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
 887              		.loc 1 807 0
 888 000c 0020     		movs	r0, #0
 889              	.LVL64:
 890 000e 7047     		bx	lr
 891              	.LVL65:
 892              	.L94:
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Sleep mode */
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 893              		.loc 1 814 0
 894 0010 0368     		ldr	r3, [r0]
 895 0012 5B68     		ldr	r3, [r3, #4]
 896 0014 13F0020F 		tst	r3, #2
 897 0018 01D0     		beq	.L95
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       status = 1U;
 898              		.loc 1 816 0
 899 001a 0120     		movs	r0, #1
 900              	.LVL66:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 33


 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 901              		.loc 1 822 0
 902 001c 7047     		bx	lr
 903              	.LVL67:
 904              	.L95:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 905              		.loc 1 807 0
 906 001e 0020     		movs	r0, #0
 907              	.LVL68:
 908 0020 7047     		bx	lr
 909              		.cfi_endproc
 910              	.LFE135:
 912              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 913              		.align	1
 914              		.global	HAL_CAN_AddTxMessage
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	HAL_CAN_AddTxMessage:
 921              	.LFB136:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         corresponding transmission request.
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, CAN_TxHeaderTypeDef *pHeader, uint8
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 922              		.loc 1 837 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
 927              	.LVL69:
 928 0000 70B4     		push	{r4, r5, r6}
 929              	.LCFI12:
 930              		.cfi_def_cfa_offset 12
 931              		.cfi_offset 4, -12
 932              		.cfi_offset 5, -8
 933              		.cfi_offset 6, -4
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox;
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 934              		.loc 1 839 0
 935 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 936              	.LVL70:
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 937              		.loc 1 840 0
 938 0006 0568     		ldr	r5, [r0]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 34


 939 0008 AD68     		ldr	r5, [r5, #8]
 940              	.LVL71:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 941              		.loc 1 856 0
 942 000a 013C     		subs	r4, r4, #1
 943              	.LVL72:
 944 000c E4B2     		uxtb	r4, r4
 945 000e 012C     		cmp	r4, #1
 946 0010 06D9     		bls	.L105
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Select an empty transmit mailbox */
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check transmit mailbox value */
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (transmitmailbox > 2U)
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INTERNAL;
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Store the Tx mailbox */
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the Id */
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 35


 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the DLC */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the data field */
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Request transmission */
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Return function status */
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_OK;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 947              		.loc 1 930 0
 948 0012 436A     		ldr	r3, [r0, #36]
 949              	.LVL73:
 950 0014 43F48023 		orr	r3, r3, #262144
 951 0018 4362     		str	r3, [r0, #36]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 952              		.loc 1 932 0
 953 001a 0120     		movs	r0, #1
 954              	.LVL74:
 955              	.L100:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 956              		.loc 1 934 0
 957 001c 70BC     		pop	{r4, r5, r6}
 958              	.LCFI13:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 36


 959              		.cfi_remember_state
 960              		.cfi_restore 6
 961              		.cfi_restore 5
 962              		.cfi_restore 4
 963              		.cfi_def_cfa_offset 0
 964 001e 7047     		bx	lr
 965              	.LVL75:
 966              	.L105:
 967              	.LCFI14:
 968              		.cfi_restore_state
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 969              		.loc 1 860 0
 970 0020 15F0E05F 		tst	r5, #469762048
 971 0024 5BD0     		beq	.L98
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 972              		.loc 1 865 0
 973 0026 C5F30165 		ubfx	r5, r5, #24, #2
 974              	.LVL76:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 975              		.loc 1 868 0
 976 002a 022D     		cmp	r5, #2
 977 002c 3ED8     		bhi	.L106
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 978              		.loc 1 877 0
 979 002e 0124     		movs	r4, #1
 980 0030 AC40     		lsls	r4, r4, r5
 981 0032 1C60     		str	r4, [r3]
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 982              		.loc 1 880 0
 983 0034 8B68     		ldr	r3, [r1, #8]
 984              	.LVL77:
 985 0036 002B     		cmp	r3, #0
 986 0038 3ED1     		bne	.L101
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 987              		.loc 1 882 0
 988 003a 0E68     		ldr	r6, [r1]
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 989              		.loc 1 883 0
 990 003c CB68     		ldr	r3, [r1, #12]
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 991              		.loc 1 882 0
 992 003e 0468     		ldr	r4, [r0]
 993 0040 43EA4656 		orr	r6, r3, r6, lsl #21
 994 0044 05F11803 		add	r3, r5, #24
 995 0048 1B01     		lsls	r3, r3, #4
 996 004a E650     		str	r6, [r4, r3]
 997              	.L102:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 998              		.loc 1 893 0
 999 004c 0368     		ldr	r3, [r0]
 1000 004e 0C69     		ldr	r4, [r1, #16]
 1001 0050 05F11806 		add	r6, r5, #24
 1002 0054 03EB0613 		add	r3, r3, r6, lsl #4
 1003 0058 5C60     		str	r4, [r3, #4]
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 1004              		.loc 1 896 0
 1005 005a 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 37


 1006 005c 012B     		cmp	r3, #1
 1007 005e 36D0     		beq	.L107
 1008              	.LVL78:
 1009              	.L103:
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
 1010              		.loc 1 902 0
 1011 0060 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1012 0062 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1013 0064 1B04     		lsls	r3, r3, #16
 1014 0066 43EA0163 		orr	r3, r3, r1, lsl #24
 1015 006a 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1016 006c 43EA0123 		orr	r3, r3, r1, lsl #8
 1017 0070 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1018 0072 0168     		ldr	r1, [r0]
 1019 0074 2343     		orrs	r3, r3, r4
 1020 0076 2C01     		lsls	r4, r5, #4
 1021 0078 2144     		add	r1, r1, r4
 1022 007a C1F88C31 		str	r3, [r1, #396]
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 1023              		.loc 1 907 0
 1024 007e D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1025 0080 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1026 0082 1B04     		lsls	r3, r3, #16
 1027 0084 43EA0163 		orr	r3, r3, r1, lsl #24
 1028 0088 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1029 008a 43EA0123 		orr	r3, r3, r1, lsl #8
 1030 008e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1031 0090 0268     		ldr	r2, [r0]
 1032              	.LVL79:
 1033 0092 0B43     		orrs	r3, r3, r1
 1034 0094 2244     		add	r2, r2, r4
 1035 0096 C2F88831 		str	r3, [r2, #392]
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1036              		.loc 1 914 0
 1037 009a 0268     		ldr	r2, [r0]
 1038 009c 1835     		adds	r5, r5, #24
 1039              	.LVL80:
 1040 009e 2D01     		lsls	r5, r5, #4
 1041 00a0 5359     		ldr	r3, [r2, r5]
 1042 00a2 43F00103 		orr	r3, r3, #1
 1043 00a6 5351     		str	r3, [r2, r5]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1044              		.loc 1 917 0
 1045 00a8 0020     		movs	r0, #0
 1046              	.LVL81:
 1047 00aa B7E7     		b	.L100
 1048              	.LVL82:
 1049              	.L106:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1050              		.loc 1 871 0
 1051 00ac 436A     		ldr	r3, [r0, #36]
 1052              	.LVL83:
 1053 00ae 43F40003 		orr	r3, r3, #8388608
 1054 00b2 4362     		str	r3, [r0, #36]
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1055              		.loc 1 873 0
 1056 00b4 0120     		movs	r0, #1
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 38


 1057              	.LVL84:
 1058 00b6 B1E7     		b	.L100
 1059              	.LVL85:
 1060              	.L101:
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1061              		.loc 1 887 0
 1062 00b8 4C68     		ldr	r4, [r1, #4]
 1063 00ba 43EAC403 		orr	r3, r3, r4, lsl #3
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1064              		.loc 1 889 0
 1065 00be CC68     		ldr	r4, [r1, #12]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1066              		.loc 1 887 0
 1067 00c0 0668     		ldr	r6, [r0]
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1068              		.loc 1 888 0
 1069 00c2 2343     		orrs	r3, r3, r4
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1070              		.loc 1 887 0
 1071 00c4 05F11804 		add	r4, r5, #24
 1072 00c8 2401     		lsls	r4, r4, #4
 1073 00ca 3351     		str	r3, [r6, r4]
 1074 00cc BEE7     		b	.L102
 1075              	.L107:
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1076              		.loc 1 898 0
 1077 00ce 0368     		ldr	r3, [r0]
 1078 00d0 03EB0613 		add	r3, r3, r6, lsl #4
 1079 00d4 5968     		ldr	r1, [r3, #4]
 1080              	.LVL86:
 1081 00d6 41F48071 		orr	r1, r1, #256
 1082 00da 5960     		str	r1, [r3, #4]
 1083 00dc C0E7     		b	.L103
 1084              	.LVL87:
 1085              	.L98:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1086              		.loc 1 922 0
 1087 00de 436A     		ldr	r3, [r0, #36]
 1088              	.LVL88:
 1089 00e0 43F40013 		orr	r3, r3, #2097152
 1090 00e4 4362     		str	r3, [r0, #36]
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1091              		.loc 1 924 0
 1092 00e6 0120     		movs	r0, #1
 1093              	.LVL89:
 1094 00e8 98E7     		b	.L100
 1095              		.cfi_endproc
 1096              	.LFE136:
 1098              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1099              		.align	1
 1100              		.global	HAL_CAN_AbortTxRequest
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu fpv4-sp-d16
 1106              	HAL_CAN_AbortTxRequest:
 1107              	.LFB137:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 39


 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Abort transmission requests
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1108              		.loc 1 945 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113              	.LVL90:
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1114              		.loc 1 946 0
 1115 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1116              	.LVL91:
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1117              		.loc 1 951 0
 1118 0004 013B     		subs	r3, r3, #1
 1119              	.LVL92:
 1120 0006 DBB2     		uxtb	r3, r3
 1121 0008 012B     		cmp	r3, #1
 1122 000a 05D9     		bls	.L114
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 0 */
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 1 */
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 2 */
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 40


 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1123              		.loc 1 981 0
 1124 000c 436A     		ldr	r3, [r0, #36]
 1125 000e 43F48023 		orr	r3, r3, #262144
 1126 0012 4362     		str	r3, [r0, #36]
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1127              		.loc 1 983 0
 1128 0014 0120     		movs	r0, #1
 1129              	.LVL93:
 1130 0016 7047     		bx	lr
 1131              	.LVL94:
 1132              	.L114:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1133              		.loc 1 955 0
 1134 0018 11F0010F 		tst	r1, #1
 1135 001c 04D0     		beq	.L110
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1136              		.loc 1 958 0
 1137 001e 0268     		ldr	r2, [r0]
 1138 0020 9368     		ldr	r3, [r2, #8]
 1139 0022 43F08003 		orr	r3, r3, #128
 1140 0026 9360     		str	r3, [r2, #8]
 1141              	.L110:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1142              		.loc 1 962 0
 1143 0028 11F0020F 		tst	r1, #2
 1144 002c 04D0     		beq	.L111
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1145              		.loc 1 965 0
 1146 002e 0268     		ldr	r2, [r0]
 1147 0030 9368     		ldr	r3, [r2, #8]
 1148 0032 43F40043 		orr	r3, r3, #32768
 1149 0036 9360     		str	r3, [r2, #8]
 1150              	.L111:
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1151              		.loc 1 969 0
 1152 0038 11F0040F 		tst	r1, #4
 1153 003c 06D0     		beq	.L113
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1154              		.loc 1 972 0
 1155 003e 0268     		ldr	r2, [r0]
 1156 0040 9368     		ldr	r3, [r2, #8]
 1157 0042 43F40003 		orr	r3, r3, #8388608
 1158 0046 9360     		str	r3, [r2, #8]
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1159              		.loc 1 976 0
 1160 0048 0020     		movs	r0, #0
 1161              	.LVL95:
 1162 004a 7047     		bx	lr
 1163              	.LVL96:
 1164              	.L113:
 1165 004c 0020     		movs	r0, #0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 41


 1166              	.LVL97:
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1167              		.loc 1 985 0
 1168 004e 7047     		bx	lr
 1169              		.cfi_endproc
 1170              	.LFE137:
 1172              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1173              		.align	1
 1174              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv4-sp-d16
 1180              	HAL_CAN_GetTxMailboxesFreeLevel:
 1181              	.LFB138:
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(CAN_HandleTypeDef *hcan)
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1182              		.loc 1 994 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187              	.LVL98:
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t freelevel = 0U;
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1188              		.loc 1 996 0
 1189 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1190              	.LVL99:
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1191              		.loc 1 998 0
 1192 0004 013B     		subs	r3, r3, #1
 1193              	.LVL100:
 1194 0006 DBB2     		uxtb	r3, r3
 1195 0008 012B     		cmp	r3, #1
 1196 000a 01D9     		bls	.L121
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t freelevel = 0U;
 1197              		.loc 1 995 0
 1198 000c 0020     		movs	r0, #0
 1199              	.LVL101:
 1200              	.L115:
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 42


1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return freelevel;
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1201              		.loc 1 1022 0
 1202 000e 7047     		bx	lr
 1203              	.LVL102:
 1204              	.L121:
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1205              		.loc 1 1002 0
 1206 0010 0368     		ldr	r3, [r0]
 1207 0012 9A68     		ldr	r2, [r3, #8]
 1208 0014 12F0806F 		tst	r2, #67108864
 1209 0018 0BD1     		bne	.L120
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1210              		.loc 1 995 0
 1211 001a 0020     		movs	r0, #0
 1212              	.LVL103:
 1213              	.L117:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1214              		.loc 1 1008 0
 1215 001c 9A68     		ldr	r2, [r3, #8]
 1216 001e 12F0006F 		tst	r2, #134217728
 1217 0022 00D0     		beq	.L118
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1218              		.loc 1 1010 0
 1219 0024 0130     		adds	r0, r0, #1
 1220              	.LVL104:
 1221              	.L118:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1222              		.loc 1 1014 0
 1223 0026 9B68     		ldr	r3, [r3, #8]
 1224 0028 13F0805F 		tst	r3, #268435456
 1225 002c EFD0     		beq	.L115
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1226              		.loc 1 1016 0
 1227 002e 0130     		adds	r0, r0, #1
 1228              	.LVL105:
 1229 0030 7047     		bx	lr
 1230              	.LVL106:
 1231              	.L120:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1232              		.loc 1 1004 0
 1233 0032 0120     		movs	r0, #1
 1234              	.LVL107:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 43


 1235 0034 F2E7     		b	.L117
 1236              		.cfi_endproc
 1237              	.LFE138:
 1239              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1240              		.align	1
 1241              		.global	HAL_CAN_IsTxMessagePending
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1245              		.fpu fpv4-sp-d16
 1247              	HAL_CAN_IsTxMessagePending:
 1248              	.LFB139:
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         Mailboxes.
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Status
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *                Tx Mailbox.
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1249              		.loc 1 1037 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254              	.LVL108:
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1255              		.loc 1 1039 0
 1256 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1257              	.LVL109:
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1258              		.loc 1 1044 0
 1259 0004 013B     		subs	r3, r3, #1
 1260              	.LVL110:
 1261 0006 DBB2     		uxtb	r3, r3
 1262 0008 012B     		cmp	r3, #1
 1263 000a 01D9     		bls	.L126
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
 1264              		.loc 1 1038 0
 1265 000c 0020     		movs	r0, #0
 1266              	.LVL111:
 1267 000e 7047     		bx	lr
 1268              	.LVL112:
 1269              	.L126:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 44


1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1270              		.loc 1 1048 0
 1271 0010 0368     		ldr	r3, [r0]
 1272 0012 9B68     		ldr	r3, [r3, #8]
 1273 0014 8906     		lsls	r1, r1, #26
 1274              	.LVL113:
 1275 0016 31EA0303 		bics	r3, r1, r3
 1276 001a 01D0     		beq	.L127
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       status = 1U;
 1277              		.loc 1 1050 0
 1278 001c 0120     		movs	r0, #1
 1279              	.LVL114:
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return status */
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1280              		.loc 1 1056 0
 1281 001e 7047     		bx	lr
 1282              	.LVL115:
 1283              	.L127:
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1284              		.loc 1 1038 0
 1285 0020 0020     		movs	r0, #0
 1286              	.LVL116:
 1287 0022 7047     		bx	lr
 1288              		.cfi_endproc
 1289              	.LFE139:
 1291              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1292              		.align	1
 1293              		.global	HAL_CAN_GetTxTimestamp
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1297              		.fpu fpv4-sp-d16
 1299              	HAL_CAN_GetTxTimestamp:
 1300              	.LFB140:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             mode is enabled.
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         read.
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1301              		.loc 1 1069 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 45


 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL117:
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t timestamp = 0U;
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox;
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1307              		.loc 1 1072 0
 1308 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1309              	.LVL118:
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1310              		.loc 1 1077 0
 1311 0004 013B     		subs	r3, r3, #1
 1312              	.LVL119:
 1313 0006 DBB2     		uxtb	r3, r3
 1314 0008 012B     		cmp	r3, #1
 1315 000a 01D9     		bls	.L131
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t timestamp = 0U;
 1316              		.loc 1 1070 0
 1317 000c 0020     		movs	r0, #0
 1318              	.LVL120:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Select the Tx mailbox */
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get timestamp */
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return the timestamp */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return timestamp;
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1319              		.loc 1 1089 0
 1320 000e 7047     		bx	lr
 1321              	.LVL121:
 1322              	.L131:
 1323              	.LBB4:
 1324              	.LBB5:
 1325              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 46


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 47


  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 48


 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 49


 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 50


 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 51


 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 52


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 53


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 54


 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 55


 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1326              		.loc 2 531 0
 1327              		.syntax unified
 1328              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1329 0010 91FAA1F1 		rbit r1, r1
 1330              	@ 0 "" 2
 1331              	.LVL122:
 1332              		.thumb
 1333              		.syntax unified
 1334              	.LBE5:
 1335              	.LBE4:
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1336              		.loc 1 1081 0
 1337 0014 B1FA81F1 		clz	r1, r1
 1338              	.LVL123:
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1339              		.loc 1 1084 0
 1340 0018 0368     		ldr	r3, [r0]
 1341 001a 1831     		adds	r1, r1, #24
 1342              	.LVL124:
 1343 001c 03EB0111 		add	r1, r3, r1, lsl #4
 1344              	.LVL125:
 1345 0020 4868     		ldr	r0, [r1, #4]
 1346              	.LVL126:
 1347 0022 000C     		lsrs	r0, r0, #16
 1348              	.LVL127:
 1349 0024 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE140:
 1353              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1354              		.align	1
 1355              		.global	HAL_CAN_GetRxMessage
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1359              		.fpu fpv4-sp-d16
 1361              	HAL_CAN_GetRxMessage:
 1362              	.LFB141:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         of the Rx frame will be stored.
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo, CAN_RxHeaderTypeDe
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1363              		.loc 1 1103 0
 1364              		.cfi_startproc
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 56


 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              		@ link register save eliminated.
 1368              	.LVL128:
 1369 0000 30B4     		push	{r4, r5}
 1370              	.LCFI15:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 4, -8
 1373              		.cfi_offset 5, -4
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1374              		.loc 1 1104 0
 1375 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1376              	.LVL129:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1377              		.loc 1 1108 0
 1378 0006 013C     		subs	r4, r4, #1
 1379              	.LVL130:
 1380 0008 E4B2     		uxtb	r4, r4
 1381 000a 012C     		cmp	r4, #1
 1382 000c 06D9     		bls	.L141
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the Rx FIFO */
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get the header */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 57


1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) & hcan->Instance->sFIFOMailBox[RxFifo].RIR)
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_RTR_Pos;
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get the data */
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Release the FIFO */
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Release RX FIFO 0 */
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Release RX FIFO 1 */
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1383              		.loc 1 1178 0
 1384 000e 436A     		ldr	r3, [r0, #36]
 1385              	.LVL131:
 1386 0010 43F48023 		orr	r3, r3, #262144
 1387 0014 4362     		str	r3, [r0, #36]
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1388              		.loc 1 1180 0
 1389 0016 0120     		movs	r0, #1
 1390              	.LVL132:
 1391              	.L136:
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1392              		.loc 1 1182 0
 1393 0018 30BC     		pop	{r4, r5}
 1394              	.LCFI16:
 1395              		.cfi_remember_state
 1396              		.cfi_restore 5
 1397              		.cfi_restore 4
 1398              		.cfi_def_cfa_offset 0
 1399 001a 7047     		bx	lr
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 58


 1400              	.LVL133:
 1401              	.L141:
 1402              	.LCFI17:
 1403              		.cfi_restore_state
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1404              		.loc 1 1112 0
 1405 001c 0029     		cmp	r1, #0
 1406 001e 6FD1     		bne	.L134
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 1407              		.loc 1 1115 0
 1408 0020 0468     		ldr	r4, [r0]
 1409 0022 E468     		ldr	r4, [r4, #12]
 1410 0024 14F0030F 		tst	r4, #3
 1411 0028 64D0     		beq	.L142
 1412              	.L135:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1413              		.loc 1 1136 0
 1414 002a 0568     		ldr	r5, [r0]
 1415 002c 01F11B04 		add	r4, r1, #27
 1416 0030 2401     		lsls	r4, r4, #4
 1417 0032 2C59     		ldr	r4, [r5, r4]
 1418 0034 04F00404 		and	r4, r4, #4
 1419 0038 9460     		str	r4, [r2, #8]
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1420              		.loc 1 1137 0
 1421 003a 002C     		cmp	r4, #0
 1422 003c 6BD1     		bne	.L137
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1423              		.loc 1 1139 0
 1424 003e 0568     		ldr	r5, [r0]
 1425 0040 01F11B04 		add	r4, r1, #27
 1426 0044 2401     		lsls	r4, r4, #4
 1427 0046 2C59     		ldr	r4, [r5, r4]
 1428 0048 640D     		lsrs	r4, r4, #21
 1429 004a 1460     		str	r4, [r2]
 1430              	.L138:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 1431              		.loc 1 1145 0
 1432 004c 0568     		ldr	r5, [r0]
 1433 004e 01F11B04 		add	r4, r1, #27
 1434 0052 2401     		lsls	r4, r4, #4
 1435 0054 2D59     		ldr	r5, [r5, r4]
 1436 0056 C5F34005 		ubfx	r5, r5, #1, #1
 1437 005a D560     		str	r5, [r2, #12]
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1438              		.loc 1 1146 0
 1439 005c 0568     		ldr	r5, [r0]
 1440 005e 2544     		add	r5, r5, r4
 1441 0060 6D68     		ldr	r5, [r5, #4]
 1442 0062 05F00F05 		and	r5, r5, #15
 1443 0066 1561     		str	r5, [r2, #16]
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1444              		.loc 1 1147 0
 1445 0068 0568     		ldr	r5, [r0]
 1446 006a 2544     		add	r5, r5, r4
 1447 006c 6D68     		ldr	r5, [r5, #4]
 1448 006e C5F30725 		ubfx	r5, r5, #8, #8
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 59


 1449 0072 9561     		str	r5, [r2, #24]
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1450              		.loc 1 1148 0
 1451 0074 0568     		ldr	r5, [r0]
 1452 0076 2C44     		add	r4, r4, r5
 1453 0078 6468     		ldr	r4, [r4, #4]
 1454 007a 240C     		lsrs	r4, r4, #16
 1455 007c 5461     		str	r4, [r2, #20]
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1456              		.loc 1 1151 0
 1457 007e 0468     		ldr	r4, [r0]
 1458 0080 0A01     		lsls	r2, r1, #4
 1459              	.LVL134:
 1460 0082 1444     		add	r4, r4, r2
 1461 0084 D4F8B841 		ldr	r4, [r4, #440]
 1462 0088 1C70     		strb	r4, [r3]
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1463              		.loc 1 1152 0
 1464 008a 0468     		ldr	r4, [r0]
 1465 008c 1444     		add	r4, r4, r2
 1466 008e D4F8B841 		ldr	r4, [r4, #440]
 1467 0092 C4F30724 		ubfx	r4, r4, #8, #8
 1468 0096 5C70     		strb	r4, [r3, #1]
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1469              		.loc 1 1153 0
 1470 0098 0468     		ldr	r4, [r0]
 1471 009a 1444     		add	r4, r4, r2
 1472 009c D4F8B841 		ldr	r4, [r4, #440]
 1473 00a0 C4F30744 		ubfx	r4, r4, #16, #8
 1474 00a4 9C70     		strb	r4, [r3, #2]
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1475              		.loc 1 1154 0
 1476 00a6 0468     		ldr	r4, [r0]
 1477 00a8 1444     		add	r4, r4, r2
 1478 00aa D4F8B841 		ldr	r4, [r4, #440]
 1479 00ae 240E     		lsrs	r4, r4, #24
 1480 00b0 DC70     		strb	r4, [r3, #3]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1481              		.loc 1 1155 0
 1482 00b2 0468     		ldr	r4, [r0]
 1483 00b4 1444     		add	r4, r4, r2
 1484 00b6 D4F8BC41 		ldr	r4, [r4, #444]
 1485 00ba 1C71     		strb	r4, [r3, #4]
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1486              		.loc 1 1156 0
 1487 00bc 0468     		ldr	r4, [r0]
 1488 00be 1444     		add	r4, r4, r2
 1489 00c0 D4F8BC41 		ldr	r4, [r4, #444]
 1490 00c4 C4F30724 		ubfx	r4, r4, #8, #8
 1491 00c8 5C71     		strb	r4, [r3, #5]
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1492              		.loc 1 1157 0
 1493 00ca 0468     		ldr	r4, [r0]
 1494 00cc 1444     		add	r4, r4, r2
 1495 00ce D4F8BC41 		ldr	r4, [r4, #444]
 1496 00d2 C4F30744 		ubfx	r4, r4, #16, #8
 1497 00d6 9C71     		strb	r4, [r3, #6]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 60


1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1498              		.loc 1 1158 0
 1499 00d8 0468     		ldr	r4, [r0]
 1500 00da 2244     		add	r2, r2, r4
 1501 00dc D2F8BC21 		ldr	r2, [r2, #444]
 1502 00e0 120E     		lsrs	r2, r2, #24
 1503 00e2 DA71     		strb	r2, [r3, #7]
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1504              		.loc 1 1161 0
 1505 00e4 F9B9     		cbnz	r1, .L139
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1506              		.loc 1 1164 0
 1507 00e6 0268     		ldr	r2, [r0]
 1508 00e8 D368     		ldr	r3, [r2, #12]
 1509              	.LVL135:
 1510 00ea 43F02003 		orr	r3, r3, #32
 1511 00ee D360     		str	r3, [r2, #12]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1512              		.loc 1 1173 0
 1513 00f0 0020     		movs	r0, #0
 1514              	.LVL136:
 1515 00f2 91E7     		b	.L136
 1516              	.LVL137:
 1517              	.L142:
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1518              		.loc 1 1118 0
 1519 00f4 436A     		ldr	r3, [r0, #36]
 1520              	.LVL138:
 1521 00f6 43F40013 		orr	r3, r3, #2097152
 1522 00fa 4362     		str	r3, [r0, #36]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1523              		.loc 1 1120 0
 1524 00fc 0120     		movs	r0, #1
 1525              	.LVL139:
 1526 00fe 8BE7     		b	.L136
 1527              	.LVL140:
 1528              	.L134:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 1529              		.loc 1 1126 0
 1530 0100 0468     		ldr	r4, [r0]
 1531 0102 2469     		ldr	r4, [r4, #16]
 1532 0104 14F0030F 		tst	r4, #3
 1533 0108 8FD1     		bne	.L135
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1534              		.loc 1 1129 0
 1535 010a 436A     		ldr	r3, [r0, #36]
 1536              	.LVL141:
 1537 010c 43F40013 		orr	r3, r3, #2097152
 1538 0110 4362     		str	r3, [r0, #36]
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1539              		.loc 1 1131 0
 1540 0112 0120     		movs	r0, #1
 1541              	.LVL142:
 1542 0114 80E7     		b	.L136
 1543              	.LVL143:
 1544              	.L137:
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 61


 1545              		.loc 1 1143 0
 1546 0116 0568     		ldr	r5, [r0]
 1547 0118 01F11B04 		add	r4, r1, #27
 1548 011c 2401     		lsls	r4, r4, #4
 1549 011e 2C59     		ldr	r4, [r5, r4]
 1550 0120 E408     		lsrs	r4, r4, #3
 1551 0122 5460     		str	r4, [r2, #4]
 1552 0124 92E7     		b	.L138
 1553              	.LVL144:
 1554              	.L139:
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1555              		.loc 1 1169 0
 1556 0126 0268     		ldr	r2, [r0]
 1557 0128 1369     		ldr	r3, [r2, #16]
 1558              	.LVL145:
 1559 012a 43F02003 		orr	r3, r3, #32
 1560 012e 1361     		str	r3, [r2, #16]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1561              		.loc 1 1173 0
 1562 0130 0020     		movs	r0, #0
 1563              	.LVL146:
 1564 0132 71E7     		b	.L136
 1565              		.cfi_endproc
 1566              	.LFE141:
 1568              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1569              		.align	1
 1570              		.global	HAL_CAN_GetRxFifoFillLevel
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1574              		.fpu fpv4-sp-d16
 1576              	HAL_CAN_GetRxFifoFillLevel:
 1577              	.LFB142:
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1578              		.loc 1 1193 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              		@ link register save eliminated.
 1583              	.LVL147:
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filllevel = 0U;
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1584              		.loc 1 1195 0
 1585 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1586              	.LVL148:
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 62


1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1587              		.loc 1 1200 0
 1588 0004 013B     		subs	r3, r3, #1
 1589              	.LVL149:
 1590 0006 DBB2     		uxtb	r3, r3
 1591 0008 012B     		cmp	r3, #1
 1592 000a 01D9     		bls	.L147
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filllevel = 0U;
 1593              		.loc 1 1194 0
 1594 000c 0020     		movs	r0, #0
 1595              	.LVL150:
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return Rx FIFO fill level */
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return filllevel;
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1596              		.loc 1 1215 0
 1597 000e 7047     		bx	lr
 1598              	.LVL151:
 1599              	.L147:
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1600              		.loc 1 1203 0
 1601 0010 21B1     		cbz	r1, .L148
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1602              		.loc 1 1209 0
 1603 0012 0368     		ldr	r3, [r0]
 1604 0014 1869     		ldr	r0, [r3, #16]
 1605              	.LVL152:
 1606 0016 00F00300 		and	r0, r0, #3
 1607              	.LVL153:
 1608 001a 7047     		bx	lr
 1609              	.LVL154:
 1610              	.L148:
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1611              		.loc 1 1205 0
 1612 001c 0368     		ldr	r3, [r0]
 1613 001e D868     		ldr	r0, [r3, #12]
 1614              	.LVL155:
 1615 0020 00F00300 		and	r0, r0, #3
 1616              	.LVL156:
 1617 0024 7047     		bx	lr
 1618              		.cfi_endproc
 1619              	.LFE142:
 1621              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1622              		.align	1
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 63


 1623              		.global	HAL_CAN_ActivateNotification
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
 1627              		.fpu fpv4-sp-d16
 1629              	HAL_CAN_ActivateNotification:
 1630              	.LFB143:
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    Interrupts management
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                        ##### Interrupts management #####
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Enable interrupts.
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1631              		.loc 1 1246 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              		@ link register save eliminated.
 1636              	.LVL157:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1637              		.loc 1 1247 0
 1638 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1639              	.LVL158:
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1640              		.loc 1 1252 0
 1641 0004 013B     		subs	r3, r3, #1
 1642              	.LVL159:
 1643 0006 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 64


 1644 0008 012B     		cmp	r3, #1
 1645 000a 05D9     		bls	.L152
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Enable the selected interrupts */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1646              		.loc 1 1264 0
 1647 000c 436A     		ldr	r3, [r0, #36]
 1648 000e 43F48023 		orr	r3, r3, #262144
 1649 0012 4362     		str	r3, [r0, #36]
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1650              		.loc 1 1266 0
 1651 0014 0120     		movs	r0, #1
 1652              	.LVL160:
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1653              		.loc 1 1268 0
 1654 0016 7047     		bx	lr
 1655              	.LVL161:
 1656              	.L152:
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1657              		.loc 1 1256 0
 1658 0018 0268     		ldr	r2, [r0]
 1659 001a 5369     		ldr	r3, [r2, #20]
 1660 001c 1943     		orrs	r1, r1, r3
 1661              	.LVL162:
 1662 001e 5161     		str	r1, [r2, #20]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1663              		.loc 1 1259 0
 1664 0020 0020     		movs	r0, #0
 1665              	.LVL163:
 1666 0022 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE143:
 1670              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 1671              		.align	1
 1672              		.global	HAL_CAN_DeactivateNotification
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1676              		.fpu fpv4-sp-d16
 1678              	HAL_CAN_DeactivateNotification:
 1679              	.LFB144:
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Disable interrupts.
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 65


1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1680              		.loc 1 1279 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685              	.LVL164:
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1686              		.loc 1 1280 0
 1687 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1688              	.LVL165:
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1689              		.loc 1 1285 0
 1690 0004 013B     		subs	r3, r3, #1
 1691              	.LVL166:
 1692 0006 DBB2     		uxtb	r3, r3
 1693 0008 012B     		cmp	r3, #1
 1694 000a 05D9     		bls	.L156
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable the selected interrupts */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1695              		.loc 1 1297 0
 1696 000c 436A     		ldr	r3, [r0, #36]
 1697 000e 43F48023 		orr	r3, r3, #262144
 1698 0012 4362     		str	r3, [r0, #36]
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1699              		.loc 1 1299 0
 1700 0014 0120     		movs	r0, #1
 1701              	.LVL167:
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1702              		.loc 1 1301 0
 1703 0016 7047     		bx	lr
 1704              	.LVL168:
 1705              	.L156:
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1706              		.loc 1 1289 0
 1707 0018 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 66


 1708 001a 5369     		ldr	r3, [r2, #20]
 1709 001c 23EA0101 		bic	r1, r3, r1
 1710              	.LVL169:
 1711 0020 5161     		str	r1, [r2, #20]
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1712              		.loc 1 1292 0
 1713 0022 0020     		movs	r0, #0
 1714              	.LVL170:
 1715 0024 7047     		bx	lr
 1716              		.cfi_endproc
 1717              	.LFE144:
 1719              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 1720              		.align	1
 1721              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1725              		.fpu fpv4-sp-d16
 1727              	HAL_CAN_TxMailbox0CompleteCallback:
 1728              	.LFB146:
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 67


1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 68


1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check if message is still pending */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 69


1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 0 mesage pending Callback */
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check if message is still pending */
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 1 mesage pending Callback */
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep Callback */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 70


1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear WakeUp Flag */
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* WakeUp Callback */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Error interrupts management *********************************************/
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Error Warning Flag */
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Error Passive Flag */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Bus-off Flag */
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Last Error Code Flag */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 71


1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_0):
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Stuff error */
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1):
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Form error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2):
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to CRC error */
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           default:
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Clear Last error code Flag */
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear ERRI Flag */
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code in handle */
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call Error callback function */
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call weak (surcharged) callback */
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief   CAN Callback functions
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 72


1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                           ##### Callback functions #####
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     This subsection provides the following callback functions:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1729              		.loc 1 1656 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734              	.LVL171:
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1735              		.loc 1 1664 0
 1736 0000 7047     		bx	lr
 1737              		.cfi_endproc
 1738              	.LFE146:
 1740              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 1741              		.align	1
 1742              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 73


 1746              		.fpu fpv4-sp-d16
 1748              	HAL_CAN_TxMailbox1CompleteCallback:
 1749              	.LFB147:
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1750              		.loc 1 1673 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 0
 1753              		@ frame_needed = 0, uses_anonymous_args = 0
 1754              		@ link register save eliminated.
 1755              	.LVL172:
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1756              		.loc 1 1681 0
 1757 0000 7047     		bx	lr
 1758              		.cfi_endproc
 1759              	.LFE147:
 1761              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 1762              		.align	1
 1763              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu fpv4-sp-d16
 1769              	HAL_CAN_TxMailbox2CompleteCallback:
 1770              	.LFB148:
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1771              		.loc 1 1690 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776              	.LVL173:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 74


1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1777              		.loc 1 1698 0
 1778 0000 7047     		bx	lr
 1779              		.cfi_endproc
 1780              	.LFE148:
 1782              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 1783              		.align	1
 1784              		.weak	HAL_CAN_TxMailbox0AbortCallback
 1785              		.syntax unified
 1786              		.thumb
 1787              		.thumb_func
 1788              		.fpu fpv4-sp-d16
 1790              	HAL_CAN_TxMailbox0AbortCallback:
 1791              	.LFB149:
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1792              		.loc 1 1707 0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 0
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
 1796              		@ link register save eliminated.
 1797              	.LVL174:
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1798              		.loc 1 1715 0
 1799 0000 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE149:
 1803              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 1804              		.align	1
 1805              		.weak	HAL_CAN_TxMailbox1AbortCallback
 1806              		.syntax unified
 1807              		.thumb
 1808              		.thumb_func
 1809              		.fpu fpv4-sp-d16
 1811              	HAL_CAN_TxMailbox1AbortCallback:
 1812              	.LFB150:
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 75


1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1813              		.loc 1 1724 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              		@ link register save eliminated.
 1818              	.LVL175:
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1819              		.loc 1 1732 0
 1820 0000 7047     		bx	lr
 1821              		.cfi_endproc
 1822              	.LFE150:
 1824              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 1825              		.align	1
 1826              		.weak	HAL_CAN_TxMailbox2AbortCallback
 1827              		.syntax unified
 1828              		.thumb
 1829              		.thumb_func
 1830              		.fpu fpv4-sp-d16
 1832              	HAL_CAN_TxMailbox2AbortCallback:
 1833              	.LFB151:
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1834              		.loc 1 1741 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 1838              		@ link register save eliminated.
 1839              	.LVL176:
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1840              		.loc 1 1749 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 76


 1841 0000 7047     		bx	lr
 1842              		.cfi_endproc
 1843              	.LFE151:
 1845              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1846              		.align	1
 1847              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1851              		.fpu fpv4-sp-d16
 1853              	HAL_CAN_RxFifo0MsgPendingCallback:
 1854              	.LFB152:
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1855              		.loc 1 1758 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
 1860              	.LVL177:
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1861              		.loc 1 1766 0
 1862 0000 7047     		bx	lr
 1863              		.cfi_endproc
 1864              	.LFE152:
 1866              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 1867              		.align	1
 1868              		.weak	HAL_CAN_RxFifo0FullCallback
 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu fpv4-sp-d16
 1874              	HAL_CAN_RxFifo0FullCallback:
 1875              	.LFB153:
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 77


 1876              		.loc 1 1775 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880              		@ link register save eliminated.
 1881              	.LVL178:
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             file
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1882              		.loc 1 1783 0
 1883 0000 7047     		bx	lr
 1884              		.cfi_endproc
 1885              	.LFE153:
 1887              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 1888              		.align	1
 1889              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 1890              		.syntax unified
 1891              		.thumb
 1892              		.thumb_func
 1893              		.fpu fpv4-sp-d16
 1895              	HAL_CAN_RxFifo1MsgPendingCallback:
 1896              	.LFB154:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1897              		.loc 1 1792 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 0
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              		@ link register save eliminated.
 1902              	.LVL179:
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1903              		.loc 1 1800 0
 1904 0000 7047     		bx	lr
 1905              		.cfi_endproc
 1906              	.LFE154:
 1908              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 1909              		.align	1
 1910              		.weak	HAL_CAN_RxFifo1FullCallback
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 78


 1911              		.syntax unified
 1912              		.thumb
 1913              		.thumb_func
 1914              		.fpu fpv4-sp-d16
 1916              	HAL_CAN_RxFifo1FullCallback:
 1917              	.LFB155:
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1918              		.loc 1 1809 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923              	.LVL180:
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             file
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1924              		.loc 1 1817 0
 1925 0000 7047     		bx	lr
 1926              		.cfi_endproc
 1927              	.LFE155:
 1929              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 1930              		.align	1
 1931              		.weak	HAL_CAN_SleepCallback
 1932              		.syntax unified
 1933              		.thumb
 1934              		.thumb_func
 1935              		.fpu fpv4-sp-d16
 1937              	HAL_CAN_SleepCallback:
 1938              	.LFB156:
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Sleep callback.
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1939              		.loc 1 1826 0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
 1944              	.LVL181:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 79


1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1945              		.loc 1 1833 0
 1946 0000 7047     		bx	lr
 1947              		.cfi_endproc
 1948              	.LFE156:
 1950              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 1951              		.align	1
 1952              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 1953              		.syntax unified
 1954              		.thumb
 1955              		.thumb_func
 1956              		.fpu fpv4-sp-d16
 1958              	HAL_CAN_WakeUpFromRxMsgCallback:
 1959              	.LFB157:
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1960              		.loc 1 1842 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 0
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
 1964              		@ link register save eliminated.
 1965              	.LVL182:
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1966              		.loc 1 1850 0
 1967 0000 7047     		bx	lr
 1968              		.cfi_endproc
 1969              	.LFE157:
 1971              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 1972              		.align	1
 1973              		.weak	HAL_CAN_ErrorCallback
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu fpv4-sp-d16
 1979              	HAL_CAN_ErrorCallback:
 1980              	.LFB158:
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 80


1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Error CAN callback.
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1981              		.loc 1 1859 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 0, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986              	.LVL183:
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1987              		.loc 1 1866 0
 1988 0000 7047     		bx	lr
 1989              		.cfi_endproc
 1990              	.LFE158:
 1992              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 1993              		.align	1
 1994              		.global	HAL_CAN_IRQHandler
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1998              		.fpu fpv4-sp-d16
 2000              	HAL_CAN_IRQHandler:
 2001              	.LFB145:
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2002              		.loc 1 1310 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              	.LVL184:
 2007 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2008              	.LCFI18:
 2009              		.cfi_def_cfa_offset 40
 2010              		.cfi_offset 3, -40
 2011              		.cfi_offset 4, -36
 2012              		.cfi_offset 5, -32
 2013              		.cfi_offset 6, -28
 2014              		.cfi_offset 7, -24
 2015              		.cfi_offset 8, -20
 2016              		.cfi_offset 9, -16
 2017              		.cfi_offset 10, -12
 2018              		.cfi_offset 11, -8
 2019              		.cfi_offset 14, -4
 2020 0004 0546     		mov	r5, r0
 2021              	.LVL185:
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2022              		.loc 1 1312 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 81


 2023 0006 0368     		ldr	r3, [r0]
 2024 0008 5C69     		ldr	r4, [r3, #20]
 2025              	.LVL186:
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2026              		.loc 1 1313 0
 2027 000a 5F68     		ldr	r7, [r3, #4]
 2028              	.LVL187:
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2029              		.loc 1 1314 0
 2030 000c 9E68     		ldr	r6, [r3, #8]
 2031              	.LVL188:
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2032              		.loc 1 1315 0
 2033 000e D3F80C90 		ldr	r9, [r3, #12]
 2034              	.LVL189:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2035              		.loc 1 1316 0
 2036 0012 D3F81080 		ldr	r8, [r3, #16]
 2037              	.LVL190:
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2038              		.loc 1 1317 0
 2039 0016 D3F818A0 		ldr	r10, [r3, #24]
 2040              	.LVL191:
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2041              		.loc 1 1320 0
 2042 001a 14F0010F 		tst	r4, #1
 2043 001e 5AD0     		beq	.L203
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2044              		.loc 1 1323 0
 2045 0020 16F0010F 		tst	r6, #1
 2046 0024 17D0     		beq	.L204
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2047              		.loc 1 1326 0
 2048 0026 0122     		movs	r2, #1
 2049 0028 9A60     		str	r2, [r3, #8]
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2050              		.loc 1 1328 0
 2051 002a 16F0020F 		tst	r6, #2
 2052 002e 08D1     		bne	.L208
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2053              		.loc 1 1336 0
 2054 0030 16F0040F 		tst	r6, #4
 2055 0034 30D1     		bne	.L205
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2056              		.loc 1 1341 0
 2057 0036 16F0080F 		tst	r6, #8
 2058 003a 07D0     		beq	.L209
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2059              		.loc 1 1344 0
 2060 003c 4FF4805B 		mov	fp, #4096
 2061 0040 0BE0     		b	.L172
 2062              	.L208:
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2063              		.loc 1 1332 0
 2064 0042 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2065              	.LVL192:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 82


 2066              		.loc 1 1311 0
 2067 0046 4FF0000B 		mov	fp, #0
 2068 004a 06E0     		b	.L172
 2069              	.LVL193:
 2070              	.L209:
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2071              		.loc 1 1350 0
 2072 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2073              	.LVL194:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2074              		.loc 1 1311 0
 2075 0050 4FF0000B 		mov	fp, #0
 2076 0054 01E0     		b	.L172
 2077              	.LVL195:
 2078              	.L204:
 2079 0056 4FF0000B 		mov	fp, #0
 2080              	.LVL196:
 2081              	.L172:
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2082              		.loc 1 1356 0
 2083 005a 16F4807F 		tst	r6, #256
 2084 005e 0BD0     		beq	.L174
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2085              		.loc 1 1359 0
 2086 0060 2B68     		ldr	r3, [r5]
 2087 0062 4FF48072 		mov	r2, #256
 2088 0066 9A60     		str	r2, [r3, #8]
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2089              		.loc 1 1361 0
 2090 0068 16F4007F 		tst	r6, #512
 2091 006c 17D1     		bne	.L210
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2092              		.loc 1 1369 0
 2093 006e 16F4806F 		tst	r6, #1024
 2094 0072 18D0     		beq	.L176
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2095              		.loc 1 1372 0
 2096 0074 4BF4005B 		orr	fp, fp, #8192
 2097              	.LVL197:
 2098              	.L174:
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2099              		.loc 1 1389 0
 2100 0078 16F4803F 		tst	r6, #65536
 2101 007c 2DD0     		beq	.L171
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2102              		.loc 1 1392 0
 2103 007e 2B68     		ldr	r3, [r5]
 2104 0080 4FF48032 		mov	r2, #65536
 2105 0084 9A60     		str	r2, [r3, #8]
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2106              		.loc 1 1394 0
 2107 0086 16F4003F 		tst	r6, #131072
 2108 008a 16D1     		bne	.L211
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2109              		.loc 1 1402 0
 2110 008c 16F4802F 		tst	r6, #262144
 2111 0090 17D0     		beq	.L179
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 83


1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2112              		.loc 1 1405 0
 2113 0092 4BF4004B 		orr	fp, fp, #32768
 2114              	.LVL198:
 2115 0096 20E0     		b	.L171
 2116              	.LVL199:
 2117              	.L205:
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2118              		.loc 1 1339 0
 2119 0098 4FF4006B 		mov	fp, #2048
 2120 009c DDE7     		b	.L172
 2121              	.LVL200:
 2122              	.L210:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2123              		.loc 1 1365 0
 2124 009e 2846     		mov	r0, r5
 2125 00a0 FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2126              	.LVL201:
 2127 00a4 E8E7     		b	.L174
 2128              	.L176:
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2129              		.loc 1 1374 0
 2130 00a6 16F4006F 		tst	r6, #2048
 2131 00aa 02D0     		beq	.L177
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2132              		.loc 1 1377 0
 2133 00ac 4BF4804B 		orr	fp, fp, #16384
 2134              	.LVL202:
 2135 00b0 E2E7     		b	.L174
 2136              	.L177:
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2137              		.loc 1 1383 0
 2138 00b2 2846     		mov	r0, r5
 2139 00b4 FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2140              	.LVL203:
 2141 00b8 DEE7     		b	.L174
 2142              	.L211:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2143              		.loc 1 1398 0
 2144 00ba 2846     		mov	r0, r5
 2145 00bc FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2146              	.LVL204:
 2147 00c0 0BE0     		b	.L171
 2148              	.L179:
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2149              		.loc 1 1407 0
 2150 00c2 16F4002F 		tst	r6, #524288
 2151 00c6 02D0     		beq	.L180
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2152              		.loc 1 1410 0
 2153 00c8 4BF4803B 		orr	fp, fp, #65536
 2154              	.LVL205:
 2155 00cc 05E0     		b	.L171
 2156              	.L180:
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2157              		.loc 1 1416 0
 2158 00ce 2846     		mov	r0, r5
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 84


 2159 00d0 FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2160              	.LVL206:
 2161 00d4 01E0     		b	.L171
 2162              	.LVL207:
 2163              	.L203:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2164              		.loc 1 1311 0
 2165 00d6 4FF0000B 		mov	fp, #0
 2166              	.LVL208:
 2167              	.L171:
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2168              		.loc 1 1423 0
 2169 00da 14F0080F 		tst	r4, #8
 2170 00de 07D0     		beq	.L181
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2171              		.loc 1 1425 0
 2172 00e0 19F0100F 		tst	r9, #16
 2173 00e4 04D0     		beq	.L181
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2174              		.loc 1 1428 0
 2175 00e6 4BF4007B 		orr	fp, fp, #512
 2176              	.LVL209:
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2177              		.loc 1 1431 0
 2178 00ea 2B68     		ldr	r3, [r5]
 2179 00ec 1022     		movs	r2, #16
 2180 00ee DA60     		str	r2, [r3, #12]
 2181              	.L181:
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2182              		.loc 1 1436 0
 2183 00f0 14F0040F 		tst	r4, #4
 2184 00f4 02D0     		beq	.L182
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2185              		.loc 1 1438 0
 2186 00f6 19F0080F 		tst	r9, #8
 2187 00fa 60D1     		bne	.L212
 2188              	.L182:
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2189              		.loc 1 1450 0
 2190 00fc 14F0020F 		tst	r4, #2
 2191 0100 04D0     		beq	.L183
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2192              		.loc 1 1453 0
 2193 0102 2B68     		ldr	r3, [r5]
 2194 0104 DB68     		ldr	r3, [r3, #12]
 2195 0106 13F0030F 		tst	r3, #3
 2196 010a 5FD1     		bne	.L213
 2197              	.L183:
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2198              		.loc 1 1462 0
 2199 010c 14F0400F 		tst	r4, #64
 2200 0110 07D0     		beq	.L184
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2201              		.loc 1 1464 0
 2202 0112 18F0100F 		tst	r8, #16
 2203 0116 04D0     		beq	.L184
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 85


 2204              		.loc 1 1467 0
 2205 0118 4BF4806B 		orr	fp, fp, #1024
 2206              	.LVL210:
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2207              		.loc 1 1470 0
 2208 011c 2B68     		ldr	r3, [r5]
 2209 011e 1022     		movs	r2, #16
 2210 0120 1A61     		str	r2, [r3, #16]
 2211              	.L184:
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2212              		.loc 1 1475 0
 2213 0122 14F0200F 		tst	r4, #32
 2214 0126 02D0     		beq	.L185
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2215              		.loc 1 1477 0
 2216 0128 18F0080F 		tst	r8, #8
 2217 012c 52D1     		bne	.L214
 2218              	.L185:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2219              		.loc 1 1489 0
 2220 012e 14F0100F 		tst	r4, #16
 2221 0132 04D0     		beq	.L186
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2222              		.loc 1 1492 0
 2223 0134 2B68     		ldr	r3, [r5]
 2224 0136 1B69     		ldr	r3, [r3, #16]
 2225 0138 13F0030F 		tst	r3, #3
 2226 013c 51D1     		bne	.L215
 2227              	.L186:
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2228              		.loc 1 1501 0
 2229 013e 14F4003F 		tst	r4, #131072
 2230 0142 02D0     		beq	.L187
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2231              		.loc 1 1503 0
 2232 0144 17F0100F 		tst	r7, #16
 2233 0148 4FD1     		bne	.L216
 2234              	.L187:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2235              		.loc 1 1515 0
 2236 014a 14F4803F 		tst	r4, #65536
 2237 014e 02D0     		beq	.L188
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2238              		.loc 1 1517 0
 2239 0150 17F0080F 		tst	r7, #8
 2240 0154 50D1     		bne	.L217
 2241              	.L188:
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2242              		.loc 1 1529 0
 2243 0156 14F4004F 		tst	r4, #32768
 2244 015a 67D0     		beq	.L189
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2245              		.loc 1 1531 0
 2246 015c 17F0040F 		tst	r7, #4
 2247 0160 61D0     		beq	.L190
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2248              		.loc 1 1534 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 86


 2249 0162 14F4807F 		tst	r4, #256
 2250 0166 04D0     		beq	.L191
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2251              		.loc 1 1534 0 is_stmt 0 discriminator 1
 2252 0168 1AF0010F 		tst	r10, #1
 2253 016c 01D0     		beq	.L191
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2254              		.loc 1 1538 0 is_stmt 1
 2255 016e 4BF0010B 		orr	fp, fp, #1
 2256              	.LVL211:
 2257              	.L191:
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2258              		.loc 1 1544 0
 2259 0172 14F4007F 		tst	r4, #512
 2260 0176 04D0     		beq	.L192
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2261              		.loc 1 1544 0 is_stmt 0 discriminator 1
 2262 0178 1AF0020F 		tst	r10, #2
 2263 017c 01D0     		beq	.L192
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2264              		.loc 1 1548 0 is_stmt 1
 2265 017e 4BF0020B 		orr	fp, fp, #2
 2266              	.LVL212:
 2267              	.L192:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2268              		.loc 1 1554 0
 2269 0182 14F4806F 		tst	r4, #1024
 2270 0186 04D0     		beq	.L193
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2271              		.loc 1 1554 0 is_stmt 0 discriminator 1
 2272 0188 1AF0040F 		tst	r10, #4
 2273 018c 01D0     		beq	.L193
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2274              		.loc 1 1558 0 is_stmt 1
 2275 018e 4BF0040B 		orr	fp, fp, #4
 2276              	.LVL213:
 2277              	.L193:
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2278              		.loc 1 1564 0
 2279 0192 14F4006F 		tst	r4, #2048
 2280 0196 46D0     		beq	.L190
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2281              		.loc 1 1564 0 is_stmt 0 discriminator 1
 2282 0198 1AF0700A 		ands	r10, r10, #112
 2283              	.LVL214:
 2284 019c 43D0     		beq	.L190
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2285              		.loc 1 1567 0 is_stmt 1
 2286 019e BAF1300F 		cmp	r10, #48
 2287 01a2 48D0     		beq	.L195
 2288 01a4 2FD9     		bls	.L218
 2289 01a6 BAF1500F 		cmp	r10, #80
 2290 01aa 47D0     		beq	.L199
 2291 01ac BAF1600F 		cmp	r10, #96
 2292 01b0 47D0     		beq	.L200
 2293 01b2 BAF1400F 		cmp	r10, #64
 2294 01b6 31D1     		bne	.L194
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 87


1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2295              		.loc 1 1583 0
 2296 01b8 4BF0400B 		orr	fp, fp, #64
 2297              	.LVL215:
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2298              		.loc 1 1584 0
 2299 01bc 2EE0     		b	.L194
 2300              	.LVL216:
 2301              	.L212:
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2302              		.loc 1 1441 0
 2303 01be 2B68     		ldr	r3, [r5]
 2304 01c0 0822     		movs	r2, #8
 2305 01c2 DA60     		str	r2, [r3, #12]
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2306              		.loc 1 1445 0
 2307 01c4 2846     		mov	r0, r5
 2308 01c6 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2309              	.LVL217:
 2310 01ca 97E7     		b	.L182
 2311              	.L213:
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2312              		.loc 1 1457 0
 2313 01cc 2846     		mov	r0, r5
 2314 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2315              	.LVL218:
 2316 01d2 9BE7     		b	.L183
 2317              	.L214:
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2318              		.loc 1 1480 0
 2319 01d4 2B68     		ldr	r3, [r5]
 2320 01d6 0822     		movs	r2, #8
 2321 01d8 1A61     		str	r2, [r3, #16]
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2322              		.loc 1 1484 0
 2323 01da 2846     		mov	r0, r5
 2324 01dc FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2325              	.LVL219:
 2326 01e0 A5E7     		b	.L185
 2327              	.L215:
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2328              		.loc 1 1496 0
 2329 01e2 2846     		mov	r0, r5
 2330 01e4 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2331              	.LVL220:
 2332 01e8 A9E7     		b	.L186
 2333              	.L216:
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2334              		.loc 1 1506 0
 2335 01ea 2B68     		ldr	r3, [r5]
 2336 01ec 1022     		movs	r2, #16
 2337 01ee 5A60     		str	r2, [r3, #4]
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2338              		.loc 1 1510 0
 2339 01f0 2846     		mov	r0, r5
 2340 01f2 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2341              	.LVL221:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 88


 2342 01f6 A8E7     		b	.L187
 2343              	.L217:
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2344              		.loc 1 1520 0
 2345 01f8 2B68     		ldr	r3, [r5]
 2346 01fa 0822     		movs	r2, #8
 2347 01fc 5A60     		str	r2, [r3, #4]
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2348              		.loc 1 1524 0
 2349 01fe 2846     		mov	r0, r5
 2350 0200 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2351              	.LVL222:
 2352 0204 A7E7     		b	.L188
 2353              	.LVL223:
 2354              	.L218:
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2355              		.loc 1 1567 0
 2356 0206 BAF1100F 		cmp	r10, #16
 2357 020a 05D0     		beq	.L197
 2358 020c BAF1200F 		cmp	r10, #32
 2359 0210 04D1     		bne	.L194
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2360              		.loc 1 1575 0
 2361 0212 4BF0100B 		orr	fp, fp, #16
 2362              	.LVL224:
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2363              		.loc 1 1576 0
 2364 0216 01E0     		b	.L194
 2365              	.L197:
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2366              		.loc 1 1571 0
 2367 0218 4BF0080B 		orr	fp, fp, #8
 2368              	.LVL225:
 2369              	.L194:
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2370              		.loc 1 1598 0
 2371 021c 2A68     		ldr	r2, [r5]
 2372 021e 9369     		ldr	r3, [r2, #24]
 2373 0220 23F07003 		bic	r3, r3, #112
 2374 0224 9361     		str	r3, [r2, #24]
 2375              	.L190:
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2376              		.loc 1 1603 0
 2377 0226 2B68     		ldr	r3, [r5]
 2378 0228 0422     		movs	r2, #4
 2379 022a 5A60     		str	r2, [r3, #4]
 2380              	.L189:
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2381              		.loc 1 1607 0
 2382 022c BBF1000F 		cmp	fp, #0
 2383 0230 0AD1     		bne	.L219
 2384              	.L170:
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2385              		.loc 1 1616 0
 2386 0232 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2387              	.LVL226:
 2388              	.L195:
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 89


1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2389              		.loc 1 1579 0
 2390 0236 4BF0200B 		orr	fp, fp, #32
 2391              	.LVL227:
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2392              		.loc 1 1580 0
 2393 023a EFE7     		b	.L194
 2394              	.L199:
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2395              		.loc 1 1587 0
 2396 023c 4BF0800B 		orr	fp, fp, #128
 2397              	.LVL228:
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2398              		.loc 1 1588 0
 2399 0240 ECE7     		b	.L194
 2400              	.L200:
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2401              		.loc 1 1591 0
 2402 0242 4BF4807B 		orr	fp, fp, #256
 2403              	.LVL229:
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           default:
 2404              		.loc 1 1592 0
 2405 0246 E9E7     		b	.L194
 2406              	.L219:
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2407              		.loc 1 1610 0
 2408 0248 6B6A     		ldr	r3, [r5, #36]
 2409 024a 43EA0B03 		orr	r3, r3, fp
 2410 024e 6B62     		str	r3, [r5, #36]
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2411              		.loc 1 1614 0
 2412 0250 2846     		mov	r0, r5
 2413 0252 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2414              	.LVL230:
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2415              		.loc 1 1616 0
 2416 0256 ECE7     		b	.L170
 2417              		.cfi_endproc
 2418              	.LFE145:
 2420              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2421              		.align	1
 2422              		.global	HAL_CAN_GetState
 2423              		.syntax unified
 2424              		.thumb
 2425              		.thumb_func
 2426              		.fpu fpv4-sp-d16
 2428              	HAL_CAN_GetState:
 2429              	.LFB159:
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 90


1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     This subsection provides functions allowing to :
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return the CAN state.
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL state
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan)
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2430              		.loc 1 1896 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL231:
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2436              		.loc 1 1897 0
 2437 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2438 0004 DBB2     		uxtb	r3, r3
 2439              	.LVL232:
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2440              		.loc 1 1899 0
 2441 0006 5A1E     		subs	r2, r3, #1
 2442 0008 D2B2     		uxtb	r2, r2
 2443 000a 012A     		cmp	r2, #1
 2444 000c 01D9     		bls	.L224
 2445              	.LVL233:
 2446              	.L221:
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep mode is active */
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check sleep mode request flag */
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep mode request is pending */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 91


1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN state */
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return state;
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2447              		.loc 1 1922 0
 2448 000e 1846     		mov	r0, r3
 2449              	.LVL234:
 2450 0010 7047     		bx	lr
 2451              	.LVL235:
 2452              	.L224:
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2453              		.loc 1 1903 0
 2454 0012 0268     		ldr	r2, [r0]
 2455 0014 5168     		ldr	r1, [r2, #4]
 2456 0016 11F0020F 		tst	r1, #2
 2457 001a 05D1     		bne	.L222
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2458              		.loc 1 1909 0
 2459 001c 1268     		ldr	r2, [r2]
 2460 001e 12F0020F 		tst	r2, #2
 2461 0022 F4D0     		beq	.L221
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2462              		.loc 1 1912 0
 2463 0024 0323     		movs	r3, #3
 2464              	.LVL236:
 2465 0026 F2E7     		b	.L221
 2466              	.LVL237:
 2467              	.L222:
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2468              		.loc 1 1906 0
 2469 0028 0423     		movs	r3, #4
 2470              	.LVL238:
 2471 002a F0E7     		b	.L221
 2472              		.cfi_endproc
 2473              	.LFE159:
 2475              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2476              		.align	1
 2477              		.global	HAL_CAN_GetError
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
 2481              		.fpu fpv4-sp-d16
 2483              	HAL_CAN_GetError:
 2484              	.LFB160:
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return the CAN error code.
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval CAN Error Code
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2485              		.loc 1 1931 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 92


 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 2490              	.LVL239:
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN error code */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return hcan->ErrorCode;
 2491              		.loc 1 1933 0
 2492 0000 406A     		ldr	r0, [r0, #36]
 2493              	.LVL240:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2494              		.loc 1 1934 0
 2495 0002 7047     		bx	lr
 2496              		.cfi_endproc
 2497              	.LFE160:
 2499              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2500              		.align	1
 2501              		.global	HAL_CAN_ResetError
 2502              		.syntax unified
 2503              		.thumb
 2504              		.thumb_func
 2505              		.fpu fpv4-sp-d16
 2507              	HAL_CAN_ResetError:
 2508              	.LFB161:
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Reset the CAN error code.
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2509              		.loc 1 1943 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 0
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513              		@ link register save eliminated.
 2514              	.LVL241:
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2515              		.loc 1 1945 0
 2516 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2517              	.LVL242:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2518              		.loc 1 1947 0
 2519 0004 013B     		subs	r3, r3, #1
 2520              	.LVL243:
 2521 0006 DBB2     		uxtb	r3, r3
 2522 0008 012B     		cmp	r3, #1
 2523 000a 05D9     		bls	.L229
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Reset CAN error code */
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = 0U;
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 93


1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2524              		.loc 1 1956 0
 2525 000c 436A     		ldr	r3, [r0, #36]
 2526 000e 43F48023 		orr	r3, r3, #262144
 2527 0012 4362     		str	r3, [r0, #36]
 2528              	.LVL244:
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     status = HAL_ERROR;
 2529              		.loc 1 1958 0
 2530 0014 0120     		movs	r0, #1
 2531              	.LVL245:
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return the status */
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2532              		.loc 1 1963 0
 2533 0016 7047     		bx	lr
 2534              	.LVL246:
 2535              	.L229:
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2536              		.loc 1 1951 0
 2537 0018 0023     		movs	r3, #0
 2538 001a 4362     		str	r3, [r0, #36]
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2539              		.loc 1 1944 0
 2540 001c 1846     		mov	r0, r3
 2541              	.LVL247:
 2542 001e 7047     		bx	lr
 2543              		.cfi_endproc
 2544              	.LFE161:
 2546              		.text
 2547              	.Letext0:
 2548              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2549              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2550              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2551              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2552              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 2553              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2554              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2555              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 2556              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 2557              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 2558              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2559              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2560              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 94


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_can.c
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:18     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:25     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:40     .text.HAL_CAN_Init:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:47     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:283    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:290    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:304    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:311    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:496    .text.HAL_CAN_Start:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:503    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:580    .text.HAL_CAN_Stop:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:587    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:666    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:673    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:723    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:730    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:771    .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:778    .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:858    .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:863    .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:870    .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:913    .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:920    .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1099   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1106   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1173   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1180   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1240   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1247   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1292   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1299   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1354   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1361   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1569   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1576   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1622   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1629   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1671   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1678   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1720   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1727   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1741   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1748   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1762   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1769   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1783   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1790   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1804   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1811   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1825   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1832   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1846   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1853   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1867   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1874   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
ARM GAS  C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s 			page 95


C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1888   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1895   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1909   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1916   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1930   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1937   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1951   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1958   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1972   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1979   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:1993   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2000   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2421   .text.HAL_CAN_GetState:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2428   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2476   .text.HAL_CAN_GetError:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2483   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2500   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\acw\AppData\Local\Temp\cc4TaQLg.s:2507   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
