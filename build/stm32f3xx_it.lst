ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB131:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   *
   8:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f3xx_it.c ****   *
  10:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f3xx_it.c ****   *
  21:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f3xx_it.c ****   *
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 2


  32:Src/stm32f3xx_it.c ****   ******************************************************************************
  33:Src/stm32f3xx_it.c ****   */
  34:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f3xx_it.c **** 
  36:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f3xx_it.c **** #include "main.h"
  38:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  39:Src/stm32f3xx_it.c **** #include "cmsis_os.h"
  40:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  41:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  42:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  43:Src/stm32f3xx_it.c **** 
  44:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  45:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  46:Src/stm32f3xx_it.c **** 
  47:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  48:Src/stm32f3xx_it.c **** 
  49:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  50:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  51:Src/stm32f3xx_it.c ****  
  52:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  53:Src/stm32f3xx_it.c **** 
  54:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  55:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  56:Src/stm32f3xx_it.c **** 
  57:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  58:Src/stm32f3xx_it.c **** 
  59:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  60:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  61:Src/stm32f3xx_it.c **** 
  62:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  65:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  66:Src/stm32f3xx_it.c **** 
  67:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  68:Src/stm32f3xx_it.c **** 
  69:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  70:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  71:Src/stm32f3xx_it.c **** 
  72:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  73:Src/stm32f3xx_it.c **** 
  74:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  75:Src/stm32f3xx_it.c **** extern CAN_HandleTypeDef hcan;
  76:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch1;
  77:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc1;
  78:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc3;
  79:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim19;
  80:Src/stm32f3xx_it.c **** 
  81:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  84:Src/stm32f3xx_it.c **** 
  85:Src/stm32f3xx_it.c **** /******************************************************************************/
  86:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  87:Src/stm32f3xx_it.c **** /******************************************************************************/
  88:Src/stm32f3xx_it.c **** /**
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 3


  89:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  90:Src/stm32f3xx_it.c ****   */
  91:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  92:Src/stm32f3xx_it.c **** {
  28              		.loc 1 92 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  93:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  94:Src/stm32f3xx_it.c **** 
  95:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  96:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  99:Src/stm32f3xx_it.c **** }
  33              		.loc 1 99 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE131:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB132:
 100:Src/stm32f3xx_it.c **** 
 101:Src/stm32f3xx_it.c **** /**
 102:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
 103:Src/stm32f3xx_it.c ****   */
 104:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
 105:Src/stm32f3xx_it.c **** {
  48              		.loc 1 105 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE132:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB133:
 106:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 107:Src/stm32f3xx_it.c **** 
 108:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 4


 109:Src/stm32f3xx_it.c ****   while (1)
 110:Src/stm32f3xx_it.c ****   {
 111:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 112:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 113:Src/stm32f3xx_it.c ****   }
 114:Src/stm32f3xx_it.c **** }
 115:Src/stm32f3xx_it.c **** 
 116:Src/stm32f3xx_it.c **** /**
 117:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 118:Src/stm32f3xx_it.c ****   */
 119:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 120:Src/stm32f3xx_it.c **** {
  69              		.loc 1 120 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE133:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB134:
 121:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 122:Src/stm32f3xx_it.c **** 
 123:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 124:Src/stm32f3xx_it.c ****   while (1)
 125:Src/stm32f3xx_it.c ****   {
 126:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 127:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 128:Src/stm32f3xx_it.c ****   }
 129:Src/stm32f3xx_it.c **** }
 130:Src/stm32f3xx_it.c **** 
 131:Src/stm32f3xx_it.c **** /**
 132:Src/stm32f3xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 133:Src/stm32f3xx_it.c ****   */
 134:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 135:Src/stm32f3xx_it.c **** {
  90              		.loc 1 135 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE134:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 5


 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB135:
 136:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 137:Src/stm32f3xx_it.c **** 
 138:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****   while (1)
 140:Src/stm32f3xx_it.c ****   {
 141:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 142:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 143:Src/stm32f3xx_it.c ****   }
 144:Src/stm32f3xx_it.c **** }
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c **** /**
 147:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 148:Src/stm32f3xx_it.c ****   */
 149:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 150:Src/stm32f3xx_it.c **** {
 111              		.loc 1 150 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE135:
 122              		.section	.text.DebugMon_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	DebugMon_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	DebugMon_Handler:
 131              	.LFB136:
 151:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 154:Src/stm32f3xx_it.c ****   while (1)
 155:Src/stm32f3xx_it.c ****   {
 156:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 157:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 158:Src/stm32f3xx_it.c ****   }
 159:Src/stm32f3xx_it.c **** }
 160:Src/stm32f3xx_it.c **** 
 161:Src/stm32f3xx_it.c **** /**
 162:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 163:Src/stm32f3xx_it.c ****   */
 164:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 165:Src/stm32f3xx_it.c **** {
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 6


 132              		.loc 1 165 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 166:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 169:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 170:Src/stm32f3xx_it.c **** 
 171:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 172:Src/stm32f3xx_it.c **** }
 137              		.loc 1 172 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE136:
 142              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 143              		.align	1
 144              		.global	DMA1_Channel3_IRQHandler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DMA1_Channel3_IRQHandler:
 151              	.LFB137:
 173:Src/stm32f3xx_it.c **** 
 174:Src/stm32f3xx_it.c **** /******************************************************************************/
 175:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 176:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 177:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 178:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 179:Src/stm32f3xx_it.c **** /******************************************************************************/
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c **** /**
 182:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 183:Src/stm32f3xx_it.c ****   */
 184:Src/stm32f3xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 185:Src/stm32f3xx_it.c **** {
 152              		.loc 1 185 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI0:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 186:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 187:Src/stm32f3xx_it.c **** 
 188:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 189:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 161              		.loc 1 189 0
 162 0002 0248     		ldr	r0, .L13
 163 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 164              	.LVL0:
 190:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 191:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 7


 192:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 193:Src/stm32f3xx_it.c **** }
 165              		.loc 1 193 0
 166 0008 08BD     		pop	{r3, pc}
 167              	.L14:
 168 000a 00BF     		.align	2
 169              	.L13:
 170 000c 00000000 		.word	hdma_dac1_ch1
 171              		.cfi_endproc
 172              	.LFE137:
 174              		.section	.text.CAN_RX0_IRQHandler,"ax",%progbits
 175              		.align	1
 176              		.global	CAN_RX0_IRQHandler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	CAN_RX0_IRQHandler:
 183              	.LFB138:
 194:Src/stm32f3xx_it.c **** 
 195:Src/stm32f3xx_it.c **** /**
 196:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX0 interrupt.
 197:Src/stm32f3xx_it.c ****   */
 198:Src/stm32f3xx_it.c **** void CAN_RX0_IRQHandler(void)
 199:Src/stm32f3xx_it.c **** {
 184              		.loc 1 199 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 200:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 0 */
 201:Src/stm32f3xx_it.c **** 
 202:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 0 */
 203:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 193              		.loc 1 203 0
 194 0002 0248     		ldr	r0, .L17
 195 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 196              	.LVL1:
 204:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 1 */
 205:Src/stm32f3xx_it.c **** 
 206:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 1 */
 207:Src/stm32f3xx_it.c **** }
 197              		.loc 1 207 0
 198 0008 08BD     		pop	{r3, pc}
 199              	.L18:
 200 000a 00BF     		.align	2
 201              	.L17:
 202 000c 00000000 		.word	hcan
 203              		.cfi_endproc
 204              	.LFE138:
 206              		.section	.text.CAN_RX1_IRQHandler,"ax",%progbits
 207              		.align	1
 208              		.global	CAN_RX1_IRQHandler
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 8


 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	CAN_RX1_IRQHandler:
 215              	.LFB139:
 208:Src/stm32f3xx_it.c **** 
 209:Src/stm32f3xx_it.c **** /**
 210:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX1 interrupt.
 211:Src/stm32f3xx_it.c ****   */
 212:Src/stm32f3xx_it.c **** void CAN_RX1_IRQHandler(void)
 213:Src/stm32f3xx_it.c **** {
 216              		.loc 1 213 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 08B5     		push	{r3, lr}
 221              	.LCFI2:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
 214:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 0 */
 215:Src/stm32f3xx_it.c **** 
 216:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 0 */
 217:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 225              		.loc 1 217 0
 226 0002 0248     		ldr	r0, .L21
 227 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 228              	.LVL2:
 218:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 1 */
 219:Src/stm32f3xx_it.c **** 
 220:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 1 */
 221:Src/stm32f3xx_it.c **** }
 229              		.loc 1 221 0
 230 0008 08BD     		pop	{r3, pc}
 231              	.L22:
 232 000a 00BF     		.align	2
 233              	.L21:
 234 000c 00000000 		.word	hcan
 235              		.cfi_endproc
 236              	.LFE139:
 238              		.section	.text.DMA2_Channel3_IRQHandler,"ax",%progbits
 239              		.align	1
 240              		.global	DMA2_Channel3_IRQHandler
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	DMA2_Channel3_IRQHandler:
 247              	.LFB140:
 222:Src/stm32f3xx_it.c **** 
 223:Src/stm32f3xx_it.c **** /**
 224:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel3 global interrupt.
 225:Src/stm32f3xx_it.c ****   */
 226:Src/stm32f3xx_it.c **** void DMA2_Channel3_IRQHandler(void)
 227:Src/stm32f3xx_it.c **** {
 248              		.loc 1 227 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 9


 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI3:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
 228:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 0 */
 229:Src/stm32f3xx_it.c **** 
 230:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 0 */
 231:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc1);
 257              		.loc 1 231 0
 258 0002 0248     		ldr	r0, .L25
 259 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 260              	.LVL3:
 232:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 1 */
 233:Src/stm32f3xx_it.c **** 
 234:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 1 */
 235:Src/stm32f3xx_it.c **** }
 261              		.loc 1 235 0
 262 0008 08BD     		pop	{r3, pc}
 263              	.L26:
 264 000a 00BF     		.align	2
 265              	.L25:
 266 000c 00000000 		.word	hdma_sdadc1
 267              		.cfi_endproc
 268              	.LFE140:
 270              		.section	.text.DMA2_Channel5_IRQHandler,"ax",%progbits
 271              		.align	1
 272              		.global	DMA2_Channel5_IRQHandler
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	DMA2_Channel5_IRQHandler:
 279              	.LFB141:
 236:Src/stm32f3xx_it.c **** 
 237:Src/stm32f3xx_it.c **** /**
 238:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel5 global interrupt.
 239:Src/stm32f3xx_it.c ****   */
 240:Src/stm32f3xx_it.c **** void DMA2_Channel5_IRQHandler(void)
 241:Src/stm32f3xx_it.c **** {
 280              		.loc 1 241 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 08B5     		push	{r3, lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 3, -8
 288              		.cfi_offset 14, -4
 242:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 0 */
 243:Src/stm32f3xx_it.c **** 
 244:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 0 */
 245:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc3);
 289              		.loc 1 245 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 10


 290 0002 0248     		ldr	r0, .L29
 291 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 292              	.LVL4:
 246:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 1 */
 247:Src/stm32f3xx_it.c **** 
 248:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 1 */
 249:Src/stm32f3xx_it.c **** }
 293              		.loc 1 249 0
 294 0008 08BD     		pop	{r3, pc}
 295              	.L30:
 296 000a 00BF     		.align	2
 297              	.L29:
 298 000c 00000000 		.word	hdma_sdadc3
 299              		.cfi_endproc
 300              	.LFE141:
 302              		.section	.text.TIM19_IRQHandler,"ax",%progbits
 303              		.align	1
 304              		.global	TIM19_IRQHandler
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	TIM19_IRQHandler:
 311              	.LFB142:
 250:Src/stm32f3xx_it.c **** 
 251:Src/stm32f3xx_it.c **** /**
 252:Src/stm32f3xx_it.c ****   * @brief This function handles TIM19 global interrupt.
 253:Src/stm32f3xx_it.c ****   */
 254:Src/stm32f3xx_it.c **** void TIM19_IRQHandler(void)
 255:Src/stm32f3xx_it.c **** {
 312              		.loc 1 255 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI5:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 256:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM19_IRQn 0 */
 257:Src/stm32f3xx_it.c **** 
 258:Src/stm32f3xx_it.c ****   /* USER CODE END TIM19_IRQn 0 */
 259:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim19);
 321              		.loc 1 259 0
 322 0002 0248     		ldr	r0, .L33
 323 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 324              	.LVL5:
 260:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM19_IRQn 1 */
 261:Src/stm32f3xx_it.c **** 
 262:Src/stm32f3xx_it.c ****   /* USER CODE END TIM19_IRQn 1 */
 263:Src/stm32f3xx_it.c **** }
 325              		.loc 1 263 0
 326 0008 08BD     		pop	{r3, pc}
 327              	.L34:
 328 000a 00BF     		.align	2
 329              	.L33:
 330 000c 00000000 		.word	htim19
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 11


 331              		.cfi_endproc
 332              	.LFE142:
 334              		.text
 335              	.Letext0:
 336              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 337              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 338              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 339              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 340              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 341              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 342              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 343              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 344              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 345              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 346              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 347              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 348              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 349              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 350              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:18     .text.NMI_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:60     .text.MemManage_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:81     .text.BusFault_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:88     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:102    .text.UsageFault_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:109    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:123    .text.DebugMon_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:130    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:143    .text.DMA1_Channel3_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:150    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:170    .text.DMA1_Channel3_IRQHandler:0000000c $d
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:175    .text.CAN_RX0_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:182    .text.CAN_RX0_IRQHandler:00000000 CAN_RX0_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:202    .text.CAN_RX0_IRQHandler:0000000c $d
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:207    .text.CAN_RX1_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:214    .text.CAN_RX1_IRQHandler:00000000 CAN_RX1_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:234    .text.CAN_RX1_IRQHandler:0000000c $d
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:239    .text.DMA2_Channel3_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:246    .text.DMA2_Channel3_IRQHandler:00000000 DMA2_Channel3_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:266    .text.DMA2_Channel3_IRQHandler:0000000c $d
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:271    .text.DMA2_Channel5_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:278    .text.DMA2_Channel5_IRQHandler:00000000 DMA2_Channel5_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:298    .text.DMA2_Channel5_IRQHandler:0000000c $d
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:303    .text.TIM19_IRQHandler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:310    .text.TIM19_IRQHandler:00000000 TIM19_IRQHandler
C:\Users\acw\AppData\Local\Temp\ccHKaRDM.s:330    .text.TIM19_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_dac1_ch1
HAL_CAN_IRQHandler
hcan
hdma_sdadc1
hdma_sdadc3
HAL_TIM_IRQHandler
htim19
