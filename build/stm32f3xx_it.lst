ARM GAS  /tmp/ccIkQZXj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   *
   8:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f3xx_it.c ****   *
  10:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f3xx_it.c ****   *
  21:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccIkQZXj.s 			page 2


  31:Src/stm32f3xx_it.c ****   *
  32:Src/stm32f3xx_it.c ****   ******************************************************************************
  33:Src/stm32f3xx_it.c ****   */
  34:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f3xx_it.c **** 
  36:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f3xx_it.c **** #include "main.h"
  38:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  39:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f3xx_it.c ****  
  51:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f3xx_it.c **** 
  56:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  64:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  65:Src/stm32f3xx_it.c **** 
  66:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  67:Src/stm32f3xx_it.c **** 
  68:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  69:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  70:Src/stm32f3xx_it.c **** 
  71:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  72:Src/stm32f3xx_it.c **** 
  73:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  74:Src/stm32f3xx_it.c **** extern CAN_HandleTypeDef hcan;
  75:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch1;
  76:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc1;
  77:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_sdadc3;
  78:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  79:Src/stm32f3xx_it.c **** 
  80:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  81:Src/stm32f3xx_it.c **** 
  82:Src/stm32f3xx_it.c **** /******************************************************************************/
  83:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  84:Src/stm32f3xx_it.c **** /******************************************************************************/
  85:Src/stm32f3xx_it.c **** /**
  86:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  87:Src/stm32f3xx_it.c ****   */
ARM GAS  /tmp/ccIkQZXj.s 			page 3


  88:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  89:Src/stm32f3xx_it.c **** {
  29              		.loc 1 89 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  90:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  91:Src/stm32f3xx_it.c **** 
  92:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  93:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  94:Src/stm32f3xx_it.c **** 
  95:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  96:Src/stm32f3xx_it.c **** }
  34              		.loc 1 96 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE126:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB127:
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c **** /**
  99:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
 100:Src/stm32f3xx_it.c ****   */
 101:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
 102:Src/stm32f3xx_it.c **** {
  49              		.loc 1 102 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
 103:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 104:Src/stm32f3xx_it.c **** 
 105:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 106:Src/stm32f3xx_it.c ****   while (1)
  56              		.loc 1 106 3 discriminator 1 view .LVU3
 107:Src/stm32f3xx_it.c ****   {
 108:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 109:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 110:Src/stm32f3xx_it.c ****   }
  57              		.loc 1 110 3 discriminator 1 view .LVU4
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE127:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
ARM GAS  /tmp/ccIkQZXj.s 			page 4


  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MemManage_Handler:
  71              	.LFB128:
 111:Src/stm32f3xx_it.c **** }
 112:Src/stm32f3xx_it.c **** 
 113:Src/stm32f3xx_it.c **** /**
 114:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 115:Src/stm32f3xx_it.c ****   */
 116:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 117:Src/stm32f3xx_it.c **** {
  72              		.loc 1 117 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
 118:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 119:Src/stm32f3xx_it.c **** 
 120:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 121:Src/stm32f3xx_it.c ****   while (1)
  79              		.loc 1 121 3 discriminator 1 view .LVU6
 122:Src/stm32f3xx_it.c ****   {
 123:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 124:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 125:Src/stm32f3xx_it.c ****   }
  80              		.loc 1 125 3 discriminator 1 view .LVU7
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE128:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	BusFault_Handler:
  94              	.LFB129:
 126:Src/stm32f3xx_it.c **** }
 127:Src/stm32f3xx_it.c **** 
 128:Src/stm32f3xx_it.c **** /**
 129:Src/stm32f3xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 130:Src/stm32f3xx_it.c ****   */
 131:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 132:Src/stm32f3xx_it.c **** {
  95              		.loc 1 132 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 133:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 134:Src/stm32f3xx_it.c **** 
ARM GAS  /tmp/ccIkQZXj.s 			page 5


 135:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 136:Src/stm32f3xx_it.c ****   while (1)
 102              		.loc 1 136 3 discriminator 1 view .LVU9
 137:Src/stm32f3xx_it.c ****   {
 138:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 140:Src/stm32f3xx_it.c ****   }
 103              		.loc 1 140 3 discriminator 1 view .LVU10
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE129:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	UsageFault_Handler:
 117              	.LFB130:
 141:Src/stm32f3xx_it.c **** }
 142:Src/stm32f3xx_it.c **** 
 143:Src/stm32f3xx_it.c **** /**
 144:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 145:Src/stm32f3xx_it.c ****   */
 146:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 147:Src/stm32f3xx_it.c **** {
 118              		.loc 1 147 1 view -0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L9:
 148:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 151:Src/stm32f3xx_it.c ****   while (1)
 125              		.loc 1 151 3 discriminator 1 view .LVU12
 152:Src/stm32f3xx_it.c ****   {
 153:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 154:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 155:Src/stm32f3xx_it.c ****   }
 126              		.loc 1 155 3 discriminator 1 view .LVU13
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE130:
 131              		.section	.text.SVC_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	SVC_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	SVC_Handler:
 140              	.LFB131:
 156:Src/stm32f3xx_it.c **** }
ARM GAS  /tmp/ccIkQZXj.s 			page 6


 157:Src/stm32f3xx_it.c **** 
 158:Src/stm32f3xx_it.c **** /**
 159:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 160:Src/stm32f3xx_it.c ****   */
 161:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 162:Src/stm32f3xx_it.c **** {
 141              		.loc 1 162 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 163:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 164:Src/stm32f3xx_it.c **** 
 165:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 166:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 169:Src/stm32f3xx_it.c **** }
 146              		.loc 1 169 1 view .LVU15
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE131:
 151              		.section	.text.DebugMon_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	DebugMon_Handler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	DebugMon_Handler:
 160              	.LFB132:
 170:Src/stm32f3xx_it.c **** 
 171:Src/stm32f3xx_it.c **** /**
 172:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 173:Src/stm32f3xx_it.c ****   */
 174:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 175:Src/stm32f3xx_it.c **** {
 161              		.loc 1 175 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 177:Src/stm32f3xx_it.c **** 
 178:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 179:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 182:Src/stm32f3xx_it.c **** }
 166              		.loc 1 182 1 view .LVU17
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE132:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
ARM GAS  /tmp/ccIkQZXj.s 			page 7


 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	PendSV_Handler:
 180              	.LFB133:
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c **** /**
 185:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 186:Src/stm32f3xx_it.c ****   */
 187:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 188:Src/stm32f3xx_it.c **** {
 181              		.loc 1 188 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 189:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 190:Src/stm32f3xx_it.c **** 
 191:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 192:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 193:Src/stm32f3xx_it.c **** 
 194:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 195:Src/stm32f3xx_it.c **** }
 186              		.loc 1 195 1 view .LVU19
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE133:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	SysTick_Handler:
 200              	.LFB134:
 196:Src/stm32f3xx_it.c **** 
 197:Src/stm32f3xx_it.c **** /**
 198:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 199:Src/stm32f3xx_it.c ****   */
 200:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 201:Src/stm32f3xx_it.c **** {
 201              		.loc 1 201 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 202:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 203:Src/stm32f3xx_it.c **** 
 204:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 205:Src/stm32f3xx_it.c ****   HAL_IncTick();
 210              		.loc 1 205 3 view .LVU21
 211 0002 FFF7FEFF 		bl	HAL_IncTick
ARM GAS  /tmp/ccIkQZXj.s 			page 8


 212              	.LVL0:
 206:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 207:Src/stm32f3xx_it.c **** 
 208:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 209:Src/stm32f3xx_it.c **** }
 213              		.loc 1 209 1 is_stmt 0 view .LVU22
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE134:
 218              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Channel3_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	DMA1_Channel3_IRQHandler:
 227              	.LFB135:
 210:Src/stm32f3xx_it.c **** 
 211:Src/stm32f3xx_it.c **** /******************************************************************************/
 212:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 213:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 214:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 215:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 216:Src/stm32f3xx_it.c **** /******************************************************************************/
 217:Src/stm32f3xx_it.c **** 
 218:Src/stm32f3xx_it.c **** /**
 219:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 220:Src/stm32f3xx_it.c ****   */
 221:Src/stm32f3xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 222:Src/stm32f3xx_it.c **** {
 228              		.loc 1 222 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 223:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 226:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 237              		.loc 1 226 3 view .LVU24
 238 0002 0248     		ldr	r0, .L17
 239 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 240              	.LVL1:
 227:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 228:Src/stm32f3xx_it.c **** 
 229:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 230:Src/stm32f3xx_it.c **** }
 241              		.loc 1 230 1 is_stmt 0 view .LVU25
 242 0008 08BD     		pop	{r3, pc}
 243              	.L18:
 244 000a 00BF     		.align	2
 245              	.L17:
ARM GAS  /tmp/ccIkQZXj.s 			page 9


 246 000c 00000000 		.word	hdma_dac1_ch1
 247              		.cfi_endproc
 248              	.LFE135:
 250              		.section	.text.CAN_RX0_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	CAN_RX0_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	CAN_RX0_IRQHandler:
 259              	.LFB136:
 231:Src/stm32f3xx_it.c **** 
 232:Src/stm32f3xx_it.c **** /**
 233:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX0 interrupt.
 234:Src/stm32f3xx_it.c ****   */
 235:Src/stm32f3xx_it.c **** void CAN_RX0_IRQHandler(void)
 236:Src/stm32f3xx_it.c **** {
 260              		.loc 1 236 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 237:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 0 */
 238:Src/stm32f3xx_it.c **** 
 239:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 0 */
 240:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 269              		.loc 1 240 3 view .LVU27
 270 0002 0248     		ldr	r0, .L21
 271 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 272              	.LVL2:
 241:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 1 */
 242:Src/stm32f3xx_it.c **** 
 243:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 1 */
 244:Src/stm32f3xx_it.c **** }
 273              		.loc 1 244 1 is_stmt 0 view .LVU28
 274 0008 08BD     		pop	{r3, pc}
 275              	.L22:
 276 000a 00BF     		.align	2
 277              	.L21:
 278 000c 00000000 		.word	hcan
 279              		.cfi_endproc
 280              	.LFE136:
 282              		.section	.text.CAN_RX1_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	CAN_RX1_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	CAN_RX1_IRQHandler:
 291              	.LFB137:
 245:Src/stm32f3xx_it.c **** 
ARM GAS  /tmp/ccIkQZXj.s 			page 10


 246:Src/stm32f3xx_it.c **** /**
 247:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX1 interrupt.
 248:Src/stm32f3xx_it.c ****   */
 249:Src/stm32f3xx_it.c **** void CAN_RX1_IRQHandler(void)
 250:Src/stm32f3xx_it.c **** {
 292              		.loc 1 250 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 251:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 0 */
 252:Src/stm32f3xx_it.c **** 
 253:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 0 */
 254:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 301              		.loc 1 254 3 view .LVU30
 302 0002 0248     		ldr	r0, .L25
 303 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 304              	.LVL3:
 255:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 1 */
 256:Src/stm32f3xx_it.c **** 
 257:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 1 */
 258:Src/stm32f3xx_it.c **** }
 305              		.loc 1 258 1 is_stmt 0 view .LVU31
 306 0008 08BD     		pop	{r3, pc}
 307              	.L26:
 308 000a 00BF     		.align	2
 309              	.L25:
 310 000c 00000000 		.word	hcan
 311              		.cfi_endproc
 312              	.LFE137:
 314              		.section	.text.DMA2_Channel3_IRQHandler,"ax",%progbits
 315              		.align	1
 316              		.global	DMA2_Channel3_IRQHandler
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	DMA2_Channel3_IRQHandler:
 323              	.LFB138:
 259:Src/stm32f3xx_it.c **** 
 260:Src/stm32f3xx_it.c **** /**
 261:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel3 global interrupt.
 262:Src/stm32f3xx_it.c ****   */
 263:Src/stm32f3xx_it.c **** void DMA2_Channel3_IRQHandler(void)
 264:Src/stm32f3xx_it.c **** {
 324              		.loc 1 264 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI4:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
ARM GAS  /tmp/ccIkQZXj.s 			page 11


 332              		.cfi_offset 14, -4
 265:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 0 */
 266:Src/stm32f3xx_it.c **** 
 267:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 0 */
 268:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc1);
 333              		.loc 1 268 3 view .LVU33
 334 0002 0248     		ldr	r0, .L29
 335 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 336              	.LVL4:
 269:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 1 */
 270:Src/stm32f3xx_it.c **** 
 271:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 1 */
 272:Src/stm32f3xx_it.c **** }
 337              		.loc 1 272 1 is_stmt 0 view .LVU34
 338 0008 08BD     		pop	{r3, pc}
 339              	.L30:
 340 000a 00BF     		.align	2
 341              	.L29:
 342 000c 00000000 		.word	hdma_sdadc1
 343              		.cfi_endproc
 344              	.LFE138:
 346              		.section	.text.DMA2_Channel5_IRQHandler,"ax",%progbits
 347              		.align	1
 348              		.global	DMA2_Channel5_IRQHandler
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	DMA2_Channel5_IRQHandler:
 355              	.LFB139:
 273:Src/stm32f3xx_it.c **** 
 274:Src/stm32f3xx_it.c **** /**
 275:Src/stm32f3xx_it.c ****   * @brief This function handles DMA2 channel5 global interrupt.
 276:Src/stm32f3xx_it.c ****   */
 277:Src/stm32f3xx_it.c **** void DMA2_Channel5_IRQHandler(void)
 278:Src/stm32f3xx_it.c **** {
 356              		.loc 1 278 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 08B5     		push	{r3, lr}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 279:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 0 */
 280:Src/stm32f3xx_it.c **** 
 281:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 0 */
 282:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_sdadc3);
 365              		.loc 1 282 3 view .LVU36
 366 0002 0248     		ldr	r0, .L33
 367 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 368              	.LVL5:
 283:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA2_Channel5_IRQn 1 */
 284:Src/stm32f3xx_it.c **** 
 285:Src/stm32f3xx_it.c ****   /* USER CODE END DMA2_Channel5_IRQn 1 */
 286:Src/stm32f3xx_it.c **** }
ARM GAS  /tmp/ccIkQZXj.s 			page 12


 369              		.loc 1 286 1 is_stmt 0 view .LVU37
 370 0008 08BD     		pop	{r3, pc}
 371              	.L34:
 372 000a 00BF     		.align	2
 373              	.L33:
 374 000c 00000000 		.word	hdma_sdadc3
 375              		.cfi_endproc
 376              	.LFE139:
 378              		.text
 379              	.Letext0:
 380              		.file 2 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_t
 381              		.file 3 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 382              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 383              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 384              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 385              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 386              		.file 8 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 387              		.file 9 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 388              		.file 10 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/std
 389              		.file 11 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 390              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 391              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 392              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 393              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccIkQZXj.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/ccIkQZXj.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccIkQZXj.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccIkQZXj.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccIkQZXj.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccIkQZXj.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:116    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccIkQZXj.s:132    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:139    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccIkQZXj.s:152    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccIkQZXj.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccIkQZXj.s:192    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccIkQZXj.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccIkQZXj.s:219    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/ccIkQZXj.s:226    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/ccIkQZXj.s:246    .text.DMA1_Channel3_IRQHandler:000000000000000c $d
     /tmp/ccIkQZXj.s:251    .text.CAN_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccIkQZXj.s:258    .text.CAN_RX0_IRQHandler:0000000000000000 CAN_RX0_IRQHandler
     /tmp/ccIkQZXj.s:278    .text.CAN_RX0_IRQHandler:000000000000000c $d
     /tmp/ccIkQZXj.s:283    .text.CAN_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccIkQZXj.s:290    .text.CAN_RX1_IRQHandler:0000000000000000 CAN_RX1_IRQHandler
     /tmp/ccIkQZXj.s:310    .text.CAN_RX1_IRQHandler:000000000000000c $d
     /tmp/ccIkQZXj.s:315    .text.DMA2_Channel3_IRQHandler:0000000000000000 $t
     /tmp/ccIkQZXj.s:322    .text.DMA2_Channel3_IRQHandler:0000000000000000 DMA2_Channel3_IRQHandler
     /tmp/ccIkQZXj.s:342    .text.DMA2_Channel3_IRQHandler:000000000000000c $d
     /tmp/ccIkQZXj.s:347    .text.DMA2_Channel5_IRQHandler:0000000000000000 $t
     /tmp/ccIkQZXj.s:354    .text.DMA2_Channel5_IRQHandler:0000000000000000 DMA2_Channel5_IRQHandler
     /tmp/ccIkQZXj.s:374    .text.DMA2_Channel5_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_dac1_ch1
HAL_CAN_IRQHandler
hcan
hdma_sdadc1
hdma_sdadc3
