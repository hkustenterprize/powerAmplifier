ARM GAS  /tmp/ccnyN9JM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB127:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccnyN9JM.s 			page 2


  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "can.h"
  44:Src/main.c    **** #include "dac.h"
  45:Src/main.c    **** #include "dma.h"
  46:Src/main.c    **** #include "sdadc.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include "sampling.h"
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PTD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PM */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PM */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
ARM GAS  /tmp/ccnyN9JM.s 			page 3


  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Src/main.c    ****   HAL_Init();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN Init */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Configure the system clock */
 106:Src/main.c    ****   SystemClock_Config();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Initialize all configured peripherals */
 113:Src/main.c    ****   MX_GPIO_Init();
 114:Src/main.c    ****   MX_DMA_Init();
 115:Src/main.c    ****   MX_SDADC3_Init();
 116:Src/main.c    ****   MX_SDADC1_Init();
 117:Src/main.c    ****   MX_DAC1_Init();
 118:Src/main.c    ****   MX_CAN_Init();
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 120:Src/main.c    ****   samplingInit();
 121:Src/main.c    ****   /* USER CODE END 2 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Infinite loop */
 124:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 125:Src/main.c    ****   while (1)
 126:Src/main.c    ****   {
 127:Src/main.c    ****     /* USER CODE END WHILE */
 128:Src/main.c    **** 
 129:Src/main.c    ****     /* USER CODE BEGIN 3 */
 130:Src/main.c    ****   }
 131:Src/main.c    ****   /* USER CODE END 3 */
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /**
 135:Src/main.c    ****   * @brief System Clock Configuration
 136:Src/main.c    ****   * @retval None
 137:Src/main.c    ****   */
 138:Src/main.c    **** void SystemClock_Config(void)
 139:Src/main.c    **** {
  29              		.loc 1 139 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 104
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccnyN9JM.s 			page 4


  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 9BB0     		sub	sp, sp, #108
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 120
 140:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 140 3 view .LVU1
  43              		.loc 1 140 22 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 1294     		str	r4, [sp, #72]
  46 0008 1394     		str	r4, [sp, #76]
  47 000a 1594     		str	r4, [sp, #84]
  48 000c 1694     		str	r4, [sp, #88]
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 141 3 is_stmt 1 view .LVU3
  50              		.loc 1 141 22 is_stmt 0 view .LVU4
  51 000e 0B94     		str	r4, [sp, #44]
  52 0010 0C94     		str	r4, [sp, #48]
  53 0012 0D94     		str	r4, [sp, #52]
  54 0014 0E94     		str	r4, [sp, #56]
  55 0016 0F94     		str	r4, [sp, #60]
 142:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  56              		.loc 1 142 3 is_stmt 1 view .LVU5
  57              		.loc 1 142 28 is_stmt 0 view .LVU6
  58 0018 2C22     		movs	r2, #44
  59 001a 2146     		mov	r1, r4
  60 001c 6846     		mov	r0, sp
  61 001e FFF7FEFF 		bl	memset
  62              	.LVL0:
 143:Src/main.c    **** 
 144:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  63              		.loc 1 146 3 is_stmt 1 view .LVU7
  64              		.loc 1 146 36 is_stmt 0 view .LVU8
  65 0022 0122     		movs	r2, #1
  66 0024 1092     		str	r2, [sp, #64]
 147:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  67              		.loc 1 147 3 is_stmt 1 view .LVU9
  68              		.loc 1 147 30 is_stmt 0 view .LVU10
  69 0026 4FF48033 		mov	r3, #65536
  70 002a 1193     		str	r3, [sp, #68]
 148:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  71              		.loc 1 148 3 is_stmt 1 view .LVU11
 149:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  72              		.loc 1 149 3 view .LVU12
  73              		.loc 1 149 30 is_stmt 0 view .LVU13
  74 002c 1492     		str	r2, [sp, #80]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  75              		.loc 1 150 3 is_stmt 1 view .LVU14
  76              		.loc 1 150 34 is_stmt 0 view .LVU15
  77 002e 0225     		movs	r5, #2
  78 0030 1795     		str	r5, [sp, #92]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccnyN9JM.s 			page 5


  79              		.loc 1 151 3 is_stmt 1 view .LVU16
  80              		.loc 1 151 35 is_stmt 0 view .LVU17
  81 0032 1893     		str	r3, [sp, #96]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  82              		.loc 1 152 3 is_stmt 1 view .LVU18
  83              		.loc 1 152 32 is_stmt 0 view .LVU19
  84 0034 4FF4E013 		mov	r3, #1835008
  85 0038 1993     		str	r3, [sp, #100]
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  86              		.loc 1 153 3 is_stmt 1 view .LVU20
  87              		.loc 1 153 7 is_stmt 0 view .LVU21
  88 003a 10A8     		add	r0, sp, #64
  89 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
  90              	.LVL1:
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 158:Src/main.c    ****   */
 159:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  91              		.loc 1 159 3 is_stmt 1 view .LVU22
  92              		.loc 1 159 31 is_stmt 0 view .LVU23
  93 0040 0F23     		movs	r3, #15
  94 0042 0B93     		str	r3, [sp, #44]
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  95              		.loc 1 161 3 is_stmt 1 view .LVU24
  96              		.loc 1 161 34 is_stmt 0 view .LVU25
  97 0044 0C95     		str	r5, [sp, #48]
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 162 3 is_stmt 1 view .LVU26
  99              		.loc 1 162 35 is_stmt 0 view .LVU27
 100 0046 0D94     		str	r4, [sp, #52]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 101              		.loc 1 163 3 is_stmt 1 view .LVU28
 102              		.loc 1 163 36 is_stmt 0 view .LVU29
 103 0048 4FF48063 		mov	r3, #1024
 104 004c 0E93     		str	r3, [sp, #56]
 164:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 105              		.loc 1 164 3 is_stmt 1 view .LVU30
 106              		.loc 1 164 36 is_stmt 0 view .LVU31
 107 004e 0F94     		str	r4, [sp, #60]
 165:Src/main.c    **** 
 166:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 108              		.loc 1 166 3 is_stmt 1 view .LVU32
 109              		.loc 1 166 7 is_stmt 0 view .LVU33
 110 0050 2946     		mov	r1, r5
 111 0052 0BA8     		add	r0, sp, #44
 112 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 113              	.LVL2:
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169:Src/main.c    ****   }
 170:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_SDADC;
 114              		.loc 1 170 3 is_stmt 1 view .LVU34
 115              		.loc 1 170 38 is_stmt 0 view .LVU35
 116 0058 4FF40064 		mov	r4, #2048
ARM GAS  /tmp/ccnyN9JM.s 			page 6


 117 005c 0094     		str	r4, [sp]
 171:Src/main.c    ****   PeriphClkInit.SdadcClockSelection = RCC_SDADCSYSCLK_DIV12;
 118              		.loc 1 171 3 is_stmt 1 view .LVU36
 119              		.loc 1 171 37 is_stmt 0 view .LVU37
 120 005e 4FF02843 		mov	r3, #-1476395008
 121 0062 0893     		str	r3, [sp, #32]
 172:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 122              		.loc 1 172 3 is_stmt 1 view .LVU38
 123              		.loc 1 172 7 is_stmt 0 view .LVU39
 124 0064 6846     		mov	r0, sp
 125 0066 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 126              	.LVL3:
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG1);
 127              		.loc 1 176 3 is_stmt 1 view .LVU40
 128 006a 4FF40070 		mov	r0, #512
 129 006e FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 130              	.LVL4:
 177:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG3);
 131              		.loc 1 177 3 view .LVU41
 132 0072 2046     		mov	r0, r4
 133 0074 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 134              	.LVL5:
 178:Src/main.c    **** }
 135              		.loc 1 178 1 is_stmt 0 view .LVU42
 136 0078 1BB0     		add	sp, sp, #108
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 007a 30BD     		pop	{r4, r5, pc}
 141              		.cfi_endproc
 142              	.LFE127:
 144              		.section	.text.main,"ax",%progbits
 145              		.align	1
 146              		.global	main
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	main:
 153              	.LFB126:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 154              		.loc 1 91 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ Volatile: function does not return.
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 08B5     		push	{r3, lr}
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 3, -8
 163              		.cfi_offset 14, -4
  99:Src/main.c    **** 
 164              		.loc 1 99 3 view .LVU44
 165 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/ccnyN9JM.s 			page 7


 166              	.LVL6:
 106:Src/main.c    **** 
 167              		.loc 1 106 3 view .LVU45
 168 0006 FFF7FEFF 		bl	SystemClock_Config
 169              	.LVL7:
 113:Src/main.c    ****   MX_DMA_Init();
 170              		.loc 1 113 3 view .LVU46
 171 000a FFF7FEFF 		bl	MX_GPIO_Init
 172              	.LVL8:
 114:Src/main.c    ****   MX_SDADC3_Init();
 173              		.loc 1 114 3 view .LVU47
 174 000e FFF7FEFF 		bl	MX_DMA_Init
 175              	.LVL9:
 115:Src/main.c    ****   MX_SDADC1_Init();
 176              		.loc 1 115 3 view .LVU48
 177 0012 FFF7FEFF 		bl	MX_SDADC3_Init
 178              	.LVL10:
 116:Src/main.c    ****   MX_DAC1_Init();
 179              		.loc 1 116 3 view .LVU49
 180 0016 FFF7FEFF 		bl	MX_SDADC1_Init
 181              	.LVL11:
 117:Src/main.c    ****   MX_CAN_Init();
 182              		.loc 1 117 3 view .LVU50
 183 001a FFF7FEFF 		bl	MX_DAC1_Init
 184              	.LVL12:
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 185              		.loc 1 118 3 view .LVU51
 186 001e FFF7FEFF 		bl	MX_CAN_Init
 187              	.LVL13:
 120:Src/main.c    ****   /* USER CODE END 2 */
 188              		.loc 1 120 3 view .LVU52
 189 0022 FFF7FEFF 		bl	samplingInit
 190              	.LVL14:
 191              	.L4:
 125:Src/main.c    ****   {
 192              		.loc 1 125 3 discriminator 1 view .LVU53
 130:Src/main.c    ****   /* USER CODE END 3 */
 193              		.loc 1 130 3 discriminator 1 view .LVU54
 194 0026 FEE7     		b	.L4
 195              		.cfi_endproc
 196              	.LFE126:
 198              		.section	.text.Error_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	Error_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	Error_Handler:
 207              	.LFB128:
 179:Src/main.c    **** 
 180:Src/main.c    **** /* USER CODE BEGIN 4 */
 181:Src/main.c    **** 
 182:Src/main.c    **** /* USER CODE END 4 */
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccnyN9JM.s 			page 8


 186:Src/main.c    ****   * @retval None
 187:Src/main.c    ****   */
 188:Src/main.c    **** void Error_Handler(void)
 189:Src/main.c    **** {
 208              		.loc 1 189 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 190:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 194:Src/main.c    **** }
 213              		.loc 1 194 1 view .LVU56
 214 0000 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE128:
 218              		.text
 219              	.Letext0:
 220              		.file 2 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_t
 221              		.file 3 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 222              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 223              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 224              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 225              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 226              		.file 8 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 227              		.file 9 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 228              		.file 10 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/std
 229              		.file 11 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 230              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 231              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 232              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 233              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 234              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 235              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dac.h"
 236              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_sdadc.h"
 237              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 238              		.file 20 "Inc/can.h"
 239              		.file 21 "Inc/dac.h"
 240              		.file 22 "Inc/sdadc.h"
 241              		.file 23 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pwr_ex.h"
 242              		.file 24 "Inc/gpio.h"
 243              		.file 25 "Inc/dma.h"
 244              		.file 26 "Inc/sampling.h"
 245              		.file 27 "<built-in>"
ARM GAS  /tmp/ccnyN9JM.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnyN9JM.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnyN9JM.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnyN9JM.s:145    .text.main:0000000000000000 $t
     /tmp/ccnyN9JM.s:152    .text.main:0000000000000000 main
     /tmp/ccnyN9JM.s:199    .text.Error_Handler:0000000000000000 $t
     /tmp/ccnyN9JM.s:206    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_EnableSDADC
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SDADC3_Init
MX_SDADC1_Init
MX_DAC1_Init
MX_CAN_Init
samplingInit
