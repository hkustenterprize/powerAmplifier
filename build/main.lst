ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB132:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "cmsis_os.h"
  44:Src/main.c    **** #include "can.h"
  45:Src/main.c    **** #include "dac.h"
  46:Src/main.c    **** #include "dma.h"
  47:Src/main.c    **** #include "sdadc.h"
  48:Src/main.c    **** #include "spi.h"
  49:Src/main.c    **** #include "usb.h"
  50:Src/main.c    **** #include "gpio.h"
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** #include "sampling.h"
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PTD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN PD */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PD */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  68:Src/main.c    **** /* USER CODE BEGIN PM */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PM */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN PV */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PV */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  79:Src/main.c    **** void SystemClock_Config(void);
  80:Src/main.c    **** void MX_FREERTOS_Init(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Configure the system clock */
 110:Src/main.c    ****   SystemClock_Config();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Initialize all configured peripherals */
 117:Src/main.c    ****   MX_GPIO_Init();
 118:Src/main.c    ****   MX_DMA_Init();
 119:Src/main.c    ****   MX_SDADC3_Init();
 120:Src/main.c    ****   MX_SDADC1_Init();
 121:Src/main.c    ****   MX_DAC1_Init();
 122:Src/main.c    ****   MX_CAN_Init();
 123:Src/main.c    ****   MX_SPI2_Init();
 124:Src/main.c    ****   MX_USB_PCD_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    ****   SamplingStart();
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 130:Src/main.c    ****   MX_FREERTOS_Init();
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* Start scheduler */
 133:Src/main.c    ****   osKernelStart();
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* Infinite loop */
 138:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 139:Src/main.c    ****   while (1)
 140:Src/main.c    ****   {
 141:Src/main.c    ****   }
 142:Src/main.c    ****   /* USER CODE END WHILE */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE BEGIN 3 */
 145:Src/main.c    ****   // HAL_CAN_GetRxMessage(hcan, )
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 4


 146:Src/main.c    ****   /* USER CODE END 3 */
 147:Src/main.c    **** }
 148:Src/main.c    **** 
 149:Src/main.c    **** /**
 150:Src/main.c    ****   * @brief System Clock Configuration
 151:Src/main.c    ****   * @retval None
 152:Src/main.c    ****   */
 153:Src/main.c    **** void SystemClock_Config(void)
 154:Src/main.c    **** {
  28              		.loc 1 154 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 104
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 9BB0     		sub	sp, sp, #108
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 120
 155:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 155 0
  42 0004 0024     		movs	r4, #0
  43 0006 1294     		str	r4, [sp, #72]
  44 0008 1394     		str	r4, [sp, #76]
  45 000a 1594     		str	r4, [sp, #84]
  46 000c 1694     		str	r4, [sp, #88]
 156:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 156 0
  48 000e 0B94     		str	r4, [sp, #44]
  49 0010 0C94     		str	r4, [sp, #48]
  50 0012 0D94     		str	r4, [sp, #52]
  51 0014 0E94     		str	r4, [sp, #56]
  52 0016 0F94     		str	r4, [sp, #60]
 157:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  53              		.loc 1 157 0
  54 0018 2C22     		movs	r2, #44
  55 001a 2146     		mov	r1, r4
  56 001c 6846     		mov	r0, sp
  57 001e FFF7FEFF 		bl	memset
  58              	.LVL0:
 158:Src/main.c    **** 
 159:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 160:Src/main.c    ****   */
 161:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  59              		.loc 1 161 0
  60 0022 0122     		movs	r2, #1
  61 0024 1092     		str	r2, [sp, #64]
 162:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  62              		.loc 1 162 0
  63 0026 4FF48033 		mov	r3, #65536
  64 002a 1193     		str	r3, [sp, #68]
 163:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 164:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  65              		.loc 1 164 0
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 5


  66 002c 1492     		str	r2, [sp, #80]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  67              		.loc 1 165 0
  68 002e 0225     		movs	r5, #2
  69 0030 1795     		str	r5, [sp, #92]
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  70              		.loc 1 166 0
  71 0032 1893     		str	r3, [sp, #96]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  72              		.loc 1 167 0
  73 0034 4FF4E013 		mov	r3, #1835008
  74 0038 1993     		str	r3, [sp, #100]
 168:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  75              		.loc 1 168 0
  76 003a 10A8     		add	r0, sp, #64
  77 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
  78              	.LVL1:
 169:Src/main.c    ****   {
 170:Src/main.c    ****     Error_Handler();
 171:Src/main.c    ****   }
 172:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 173:Src/main.c    ****   */
 174:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
  79              		.loc 1 174 0
  80 0040 0F23     		movs	r3, #15
  81 0042 0B93     		str	r3, [sp, #44]
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  82              		.loc 1 175 0
  83 0044 0C95     		str	r5, [sp, #48]
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  84              		.loc 1 176 0
  85 0046 0D94     		str	r4, [sp, #52]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  86              		.loc 1 177 0
  87 0048 4FF48063 		mov	r3, #1024
  88 004c 0E93     		str	r3, [sp, #56]
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  89              		.loc 1 178 0
  90 004e 0F94     		str	r4, [sp, #60]
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  91              		.loc 1 180 0
  92 0050 2946     		mov	r1, r5
  93 0052 0BA8     		add	r0, sp, #44
  94 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  95              	.LVL2:
 181:Src/main.c    ****   {
 182:Src/main.c    ****     Error_Handler();
 183:Src/main.c    ****   }
 184:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB | RCC_PERIPHCLK_SDADC;
  96              		.loc 1 184 0
  97 0058 4FF40233 		mov	r3, #133120
  98 005c 0093     		str	r3, [sp]
 185:Src/main.c    ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
  99              		.loc 1 185 0
 100 005e 0A94     		str	r4, [sp, #40]
 186:Src/main.c    ****   PeriphClkInit.SdadcClockSelection = RCC_SDADCSYSCLK_DIV12;
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 6


 101              		.loc 1 186 0
 102 0060 4FF02843 		mov	r3, #-1476395008
 103 0064 0893     		str	r3, [sp, #32]
 187:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 104              		.loc 1 187 0
 105 0066 6846     		mov	r0, sp
 106 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 107              	.LVL3:
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG1);
 108              		.loc 1 191 0
 109 006c 4FF40070 		mov	r0, #512
 110 0070 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 111              	.LVL4:
 192:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG3);
 112              		.loc 1 192 0
 113 0074 4FF40060 		mov	r0, #2048
 114 0078 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 115              	.LVL5:
 193:Src/main.c    **** }
 116              		.loc 1 193 0
 117 007c 1BB0     		add	sp, sp, #108
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 12
 120              		@ sp needed
 121 007e 30BD     		pop	{r4, r5, pc}
 122              		.cfi_endproc
 123              	.LFE132:
 125              		.section	.text.main,"ax",%progbits
 126              		.align	1
 127              		.global	main
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	main:
 134              	.LFB131:
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
 135              		.loc 1 95 0
 136              		.cfi_startproc
 137              		@ Volatile: function does not return.
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 08B5     		push	{r3, lr}
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 3, -8
 144              		.cfi_offset 14, -4
 103:Src/main.c    **** 
 145              		.loc 1 103 0
 146 0002 FFF7FEFF 		bl	HAL_Init
 147              	.LVL6:
 110:Src/main.c    **** 
 148              		.loc 1 110 0
 149 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 7


 150              	.LVL7:
 117:Src/main.c    ****   MX_DMA_Init();
 151              		.loc 1 117 0
 152 000a FFF7FEFF 		bl	MX_GPIO_Init
 153              	.LVL8:
 118:Src/main.c    ****   MX_SDADC3_Init();
 154              		.loc 1 118 0
 155 000e FFF7FEFF 		bl	MX_DMA_Init
 156              	.LVL9:
 119:Src/main.c    ****   MX_SDADC1_Init();
 157              		.loc 1 119 0
 158 0012 FFF7FEFF 		bl	MX_SDADC3_Init
 159              	.LVL10:
 120:Src/main.c    ****   MX_DAC1_Init();
 160              		.loc 1 120 0
 161 0016 FFF7FEFF 		bl	MX_SDADC1_Init
 162              	.LVL11:
 121:Src/main.c    ****   MX_CAN_Init();
 163              		.loc 1 121 0
 164 001a FFF7FEFF 		bl	MX_DAC1_Init
 165              	.LVL12:
 122:Src/main.c    ****   MX_SPI2_Init();
 166              		.loc 1 122 0
 167 001e FFF7FEFF 		bl	MX_CAN_Init
 168              	.LVL13:
 123:Src/main.c    ****   MX_USB_PCD_Init();
 169              		.loc 1 123 0
 170 0022 FFF7FEFF 		bl	MX_SPI2_Init
 171              	.LVL14:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 172              		.loc 1 124 0
 173 0026 FFF7FEFF 		bl	MX_USB_PCD_Init
 174              	.LVL15:
 126:Src/main.c    ****   /* USER CODE END 2 */
 175              		.loc 1 126 0
 176 002a FFF7FEFF 		bl	SamplingStart
 177              	.LVL16:
 130:Src/main.c    **** 
 178              		.loc 1 130 0
 179 002e FFF7FEFF 		bl	MX_FREERTOS_Init
 180              	.LVL17:
 133:Src/main.c    **** 
 181              		.loc 1 133 0
 182 0032 FFF7FEFF 		bl	osKernelStart
 183              	.LVL18:
 184              	.L4:
 185 0036 FEE7     		b	.L4
 186              		.cfi_endproc
 187              	.LFE131:
 189              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 190              		.align	1
 191              		.global	HAL_TIM_PeriodElapsedCallback
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	HAL_TIM_PeriodElapsedCallback:
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 8


 198              	.LFB133:
 194:Src/main.c    **** 
 195:Src/main.c    **** /* USER CODE BEGIN 4 */
 196:Src/main.c    **** 
 197:Src/main.c    **** /* USER CODE END 4 */
 198:Src/main.c    **** 
 199:Src/main.c    **** /**
 200:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 201:Src/main.c    ****   * @note   This function is called  when TIM19 interrupt took place, inside
 202:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 203:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 204:Src/main.c    ****   * @param  htim : TIM handle
 205:Src/main.c    ****   * @retval None
 206:Src/main.c    ****   */
 207:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 208:Src/main.c    **** {
 199              		.loc 1 208 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL19:
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 209:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* USER CODE END Callback 0 */
 212:Src/main.c    ****   if (htim->Instance == TIM19)
 209              		.loc 1 212 0
 210 0002 0268     		ldr	r2, [r0]
 211 0004 034B     		ldr	r3, .L10
 212 0006 9A42     		cmp	r2, r3
 213 0008 00D0     		beq	.L9
 214              	.LVL20:
 215              	.L6:
 213:Src/main.c    ****   {
 214:Src/main.c    ****     HAL_IncTick();
 215:Src/main.c    ****   }
 216:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END Callback 1 */
 219:Src/main.c    **** }
 216              		.loc 1 219 0
 217 000a 08BD     		pop	{r3, pc}
 218              	.LVL21:
 219              	.L9:
 214:Src/main.c    ****   }
 220              		.loc 1 214 0
 221 000c FFF7FEFF 		bl	HAL_IncTick
 222              	.LVL22:
 223              		.loc 1 219 0
 224 0010 FBE7     		b	.L6
 225              	.L11:
 226 0012 00BF     		.align	2
 227              	.L10:
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 9


 228 0014 005C0140 		.word	1073830912
 229              		.cfi_endproc
 230              	.LFE133:
 232              		.section	.text.Error_Handler,"ax",%progbits
 233              		.align	1
 234              		.global	Error_Handler
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	Error_Handler:
 241              	.LFB134:
 220:Src/main.c    **** 
 221:Src/main.c    **** /**
 222:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 223:Src/main.c    ****   * @retval None
 224:Src/main.c    ****   */
 225:Src/main.c    **** void Error_Handler(void)
 226:Src/main.c    **** {
 242              		.loc 1 226 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 227:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 228:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 231:Src/main.c    **** }
 247              		.loc 1 231 0
 248 0000 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE134:
 252              		.text
 253              	.Letext0:
 254              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 255              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 256              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 257              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 258              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 259              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 260              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 261              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 262              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-ea
 263              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 264              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 265              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 266              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 267              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 268              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 269              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dac.h"
 270              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 271              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_sdadc.h"
 272              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 273              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 274              		.file 22 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 275              		.file 23 "Inc/can.h"
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 10


 276              		.file 24 "Inc/dac.h"
 277              		.file 25 "Inc/sdadc.h"
 278              		.file 26 "Inc/spi.h"
 279              		.file 27 "Inc/usb.h"
 280              		.file 28 "Inc/sampling.h"
 281              		.file 29 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pwr_ex.h"
 282              		.file 30 "Inc/gpio.h"
 283              		.file 31 "Inc/dma.h"
 284              		.file 32 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 285              		.file 33 "<built-in>"
ARM GAS  C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:126    .text.main:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:133    .text.main:00000000 main
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:190    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:197    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:228    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:233    .text.Error_Handler:00000000 $t
C:\Users\acw\AppData\Local\Temp\ccT9c0CB.s:240    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_EnableSDADC
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SDADC3_Init
MX_SDADC1_Init
MX_DAC1_Init
MX_CAN_Init
MX_SPI2_Init
MX_USB_PCD_Init
SamplingStart
MX_FREERTOS_Init
osKernelStart
HAL_IncTick
